"use strict";(self.webpackChunkAqLib_documentation_website=self.webpackChunkAqLib_documentation_website||[]).push([[2818],{28453:(e,s,n)=>{n.d(s,{R:()=>i,x:()=>o});var t=n(96540);const r={},a=t.createContext(r);function i(e){const s=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(a.Provider,{value:s},e.children)}},56642:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>u,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>t,toc:()=>l});var t=n(64961),r=n(74848),a=n(28453);const i={authors:{name:"Evgenii Azimzhanov",email:"eazimzhanov@aquivalabs.com",image_url:"https://ca.slack-edge.com/T0GJ0ACVB-U3Y5VKY68-755f09b400ae-512",url:"https://aquivalabs.slack.com/team/U3Y5VKY68"}},o="Reset User after sandbox refresh",u={authorsImageUrls:[void 0]},l=[];function c(e){const s={code:"code",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.p,{children:"Usage examples"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-apex",children:"// reset a user that contains name\nresetUserAfterRefreshByName('Evgenii Azimzhanov');\nresetUserAfterRefreshByName('Evgenii Azi');\nresetUserAfterRefreshByName('Azi');\n\n// reset a user by id\nresetUserAfterRefreshById('0054M000003QHQNQA4');\n"})}),"\n",(0,r.jsx)(s.p,{children:"Script"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-apex",children:"public class ResetUserException extends Exception {}\n\n/**\n * Resets the user after a refresh by their name.\n * \n * @param name The name of the user to reset.\n * @throws ResetUserException if the name is empty.\n * @throws ResetUserException if more than one user is found with the given name.\n * @throws ResetUserException if user was not found\n */\npublic void resetUserAfterRefreshByName(String name) {\n    if (String.isBlank(name)) {\n        throw new ResetUserException('Empty name');\n    }\n    List<User> users = selectUsers(name, null);\n\n    // validate that we found only single user by name\n    User foundUser;\n    for (User u : users) {\n        if (u.Name.contains(name)) {\n            if (foundUser != null) {\n                throw new ResetUserException('Two users found');\n            } else {\n                foundUser = u;\n            }\n        }\n    }\n\n    resetUser(foundUser);\n}\n\n/**\n * Resets the user after a refresh by their Id\n * \n * @param userId The Id of the user to reset.\n * @throws ResetUserException if user was not found\n */\npublic void resetUserAfterRefreshById(Id userId) {\n    User foundUser = selectUsers(null, userId).get(0);\n    resetUser(foundUser);\n}\n\nprivate void resetUser(User userToReset) {\n    if (userToReset == null) {\n        throw new ResetUserException('Cannot find the user');\n    }\n    // resetting user after refresh\n    userToReset.isActive = true;\n    if (userToReset.Email?.endsWith('.invalid')) {\n        userToReset.Email = userToReset.Email.replace('.invalid', '');\n    }\n    userToReset.ProfileId = [SELECT Id FROM Profile WHERE Name = 'System Administrator' LIMIT 1].Id;\n\n    update userToReset;\n\n    System.debug('___________________Success___________________');\n}\n\nprivate List<User> selectUsers(String name, Id userId) {\n    String query = 'SELECT Id, Name, Email, Profile.Name, Profile.UserLicenseId, CompanyName, IsActive FROM User ';\n\n    if (!String.isBlank(name)) {\n        query += 'WHERE Name LIKE \\'%' + name + '%\\'';\n    } else if (userId != null) {\n        query += 'WHERE Id = :userId';\n    } else {\n        throw new ResetUserException('Either name or userId must be provided');\n    }\n    query += ' ORDER BY CompanyName NULLS LAST';\n\n    return Database.query(query);\n}\n"})})]})}function m(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},64961:e=>{e.exports=JSON.parse('{"permalink":"/snippets/reset-user-after-refresh","editUrl":"https://bitbucket.org/aquiva/aqlib/src/main/snippets/../snippets/reset-user-after-refresh.md","source":"@site/../snippets/reset-user-after-refresh.md","title":"Reset User after sandbox refresh","description":"Usage examples","date":"2024-06-29T16:23:41.000Z","tags":[],"hasTruncateMarker":true,"authors":[{"name":"Evgenii Azimzhanov","email":"eazimzhanov@aquivalabs.com","image_url":"https://ca.slack-edge.com/T0GJ0ACVB-U3Y5VKY68-755f09b400ae-512","url":"https://aquivalabs.slack.com/team/U3Y5VKY68","imageURL":"https://ca.slack-edge.com/T0GJ0ACVB-U3Y5VKY68-755f09b400ae-512","socials":{},"key":null,"page":null}],"frontMatter":{"authors":{"name":"Evgenii Azimzhanov","email":"eazimzhanov@aquivalabs.com","image_url":"https://ca.slack-edge.com/T0GJ0ACVB-U3Y5VKY68-755f09b400ae-512","url":"https://aquivalabs.slack.com/team/U3Y5VKY68","imageURL":"https://ca.slack-edge.com/T0GJ0ACVB-U3Y5VKY68-755f09b400ae-512"}},"unlisted":false,"lastUpdatedAt":1719962641000,"lastUpdatedBy":"Artem Kniazev","prevItem":{"title":"Set the Debug Logs for a user","permalink":"/snippets/set-debug-logs-for-user"},"nextItem":{"title":"Last Viewed Records","permalink":"/snippets/last-viewed-records"}}')}}]);