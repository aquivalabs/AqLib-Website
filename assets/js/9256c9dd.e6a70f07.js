"use strict";(self.webpackChunkAqLib_documentation_website=self.webpackChunkAqLib_documentation_website||[]).push([[2031],{28453:(e,i,l)=>{l.d(i,{R:()=>o,x:()=>r});var n=l(96540);const c={},d=n.createContext(c);function o(e){const i=n.useContext(d);return n.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function r(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:o(e.components),n.createElement(d.Provider,{value:i},e.children)}},40078:(e,i,l)=>{l.r(i),l.d(i,{assets:()=>t,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>n,toc:()=>s});const n=JSON.parse('{"id":"apex/csv-reader/AqCsv","title":"AqCsv","description":"Encapsulates processing of comma-separated values file","source":"@site/../documentation/apex/csv-reader/AqCsv.md","sourceDirName":"apex/csv-reader","slug":"/apex/csv-reader/AqCsv","permalink":"/AqLib-Website/apex/csv-reader/AqCsv","draft":false,"unlisted":false,"editUrl":"https://bitbucket.org/aquiva/aqlib/src/main/documentation/../documentation/apex/csv-reader/AqCsv.md","tags":[],"version":"current","lastUpdatedBy":"Artem Kniazev","lastUpdatedAt":1721818396000,"frontMatter":{"layout":"default","autogenerated":true},"sidebar":"documentation","previous":{"title":"CSV Reader","permalink":"/AqLib-Website/apex/csv-reader/"},"next":{"title":"DML","permalink":"/AqLib-Website/apex/dml/"}}');var c=l(74848),d=l(28453);const o={layout:"default",autogenerated:!0},r="AqCsv",t={},s=[{value:"Constructors",id:"constructors",level:2},{value:"<code>public AqCsv(Config config)</code>",id:"public-aqcsvconfig-config",level:3},{value:"<code>public AqCsv(String configResourceName)</code>",id:"public-aqcsvstring-configresourcename",level:3},{value:"Fields",id:"fields",level:2},{value:"<code>public config</code> \u2192 <code>Config</code>",id:"public-config--config",level:3},{value:"<code>public csvString</code> \u2192 <code>String</code>",id:"public-csvstring--string",level:3},{value:"<code>public hasHeaders</code> \u2192 <code>Boolean</code>",id:"public-hasheaders--boolean",level:3},{value:"Properties",id:"properties",level:2},{value:"<code>public CurrentRowIndex</code> \u2192 <code>Integer</code>",id:"public-currentrowindex--integer",level:3},{value:"Methods",id:"methods",level:2},{value:"<code>public void load(String csvString, Boolean hasHeaders)</code>",id:"public-void-loadstring-csvstring-boolean-hasheaders",level:3},{value:"<code>public void reset()</code>",id:"public-void-reset",level:3},{value:"<code>public Row getNextRow()</code>",id:"public-row-getnextrow",level:3},{value:"Classes",id:"classes",level:2},{value:"Config",id:"config",level:3},{value:"Constructors",id:"constructors-1",level:4},{value:"<code>public Config()</code>",id:"public-config",level:5},{value:"Fields",id:"fields-1",level:4},{value:"<code>public theColumnMap</code> \u2192 <code>Map&amp;lt;String,ColumnDef&amp;gt;</code>",id:"public-thecolumnmap--mapltstringcolumndefgt",level:5},{value:"Properties",id:"properties-1",level:4},{value:"<code>public Separator</code> \u2192 <code>String</code>",id:"public-separator--string",level:5},{value:"<code>public Delimiter</code> \u2192 <code>String</code>",id:"public-delimiter--string",level:5},{value:"<code>public Columns</code> \u2192 <code>List&amp;lt;ColumnDef&amp;gt;</code>",id:"public-columns--listltcolumndefgt",level:5},{value:"<code>public ColumnMap</code> \u2192 <code>Map&amp;lt;String,ColumnDef&amp;gt;</code>",id:"public-columnmap--mapltstringcolumndefgt",level:5},{value:"Methods",id:"methods-1",level:4},{value:"<code>protected override void doValidate()</code>",id:"protected-override-void-dovalidate",level:5},{value:"ColumnDef",id:"columndef",level:3},{value:"Properties",id:"properties-2",level:4},{value:"<code>public Name</code> \u2192 <code>String</code>",id:"public-name--string",level:5},{value:"<code>public DataType</code> \u2192 <code>String</code>",id:"public-datatype--string",level:5},{value:"<code>public MaxLength</code> \u2192 <code>Integer</code>",id:"public-maxlength--integer",level:5},{value:"<code>public Required</code> \u2192 <code>Boolean</code>",id:"public-required--boolean",level:5},{value:"Methods",id:"methods-2",level:4},{value:"<code>protected override void doValidate()</code>",id:"protected-override-void-dovalidate-1",level:5},{value:"Row",id:"row",level:3},{value:"Constructors",id:"constructors-2",level:4},{value:"<code>public Row(AqCsv csv, Integer index)</code>",id:"public-rowaqcsv-csv-integer-index",level:5},{value:"Properties",id:"properties-3",level:4},{value:"<code>public Index</code> \u2192 <code>Integer</code>",id:"public-index--integer",level:5},{value:"<code>public Values</code> \u2192 <code>Map&amp;lt;String,object&amp;gt;</code>",id:"public-values--mapltstringobjectgt",level:5},{value:"<code>public Result</code> \u2192 <code>AqResult</code>",id:"public-result--aqresult",level:5},{value:"Methods",id:"methods-3",level:4},{value:"<code>public void addValue(ColumnDef column, String stringValue)</code>",id:"public-void-addvaluecolumndef-column-string-stringvalue",level:5},{value:"<code>public object getValue(String columnName)</code>",id:"public-object-getvaluestring-columnname",level:5},{value:"<code>public String getStringValue(String columnName)</code>",id:"public-string-getstringvaluestring-columnname",level:5},{value:"<code>public Id getIdValue(String columnName)</code>",id:"public-id-getidvaluestring-columnname",level:5},{value:"<code>public Boolean getBooleanValue(String columnName)</code>",id:"public-boolean-getbooleanvaluestring-columnname",level:5},{value:"<code>public Date getDateValue(String columnName)</code>",id:"public-date-getdatevaluestring-columnname",level:5},{value:"<code>public Time getTimeValue(String columnName)</code>",id:"public-time-gettimevaluestring-columnname",level:5},{value:"<code>public Datetime getDatetimeValue(String columnName)</code>",id:"public-datetime-getdatetimevaluestring-columnname",level:5},{value:"<code>public Integer getIntegerValue(String columnName)</code>",id:"public-integer-getintegervaluestring-columnname",level:5},{value:"<code>public Decimal getDecimalValue(String columnName)</code>",id:"public-decimal-getdecimalvaluestring-columnname",level:5},{value:"<code>public void validateAndConvert(List&amp;lt;ColumnDef&amp;gt; columns)</code>",id:"public-void-validateandconvertlistltcolumndefgt-columns",level:5}];function a(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",hr:"hr",p:"p",strong:"strong",...(0,d.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:["[ This file is autogenerated from apexdoc ]","\n",(0,c.jsx)(i.header,{children:(0,c.jsx)(i.h1,{id:"aqcsv",children:"AqCsv"})}),"\n",(0,c.jsx)(i.p,{children:"Encapsulates processing of comma-separated values file"}),"\n",(0,c.jsxs)(i.p,{children:[(0,c.jsx)(i.strong,{children:"Group"})," apex/csv reader"]}),"\n",(0,c.jsx)(i.h2,{id:"constructors",children:"Constructors"}),"\n",(0,c.jsx)(i.h3,{id:"public-aqcsvconfig-config",children:(0,c.jsx)(i.code,{children:"public AqCsv(Config config)"})}),"\n",(0,c.jsx)(i.p,{children:"Construct and pass in configuration"}),"\n",(0,c.jsx)(i.h3,{id:"public-aqcsvstring-configresourcename",children:(0,c.jsx)(i.code,{children:"public AqCsv(String configResourceName)"})}),"\n",(0,c.jsx)(i.p,{children:"Load config from a resource"}),"\n",(0,c.jsx)(i.hr,{}),"\n",(0,c.jsx)(i.h2,{id:"fields",children:"Fields"}),"\n",(0,c.jsxs)(i.h3,{id:"public-config--config",children:[(0,c.jsx)(i.code,{children:"public config"})," \u2192 ",(0,c.jsx)(i.code,{children:"Config"})]}),"\n",(0,c.jsxs)(i.h3,{id:"public-csvstring--string",children:[(0,c.jsx)(i.code,{children:"public csvString"})," \u2192 ",(0,c.jsx)(i.code,{children:"String"})]}),"\n",(0,c.jsxs)(i.h3,{id:"public-hasheaders--boolean",children:[(0,c.jsx)(i.code,{children:"public hasHeaders"})," \u2192 ",(0,c.jsx)(i.code,{children:"Boolean"})]}),"\n",(0,c.jsx)(i.hr,{}),"\n",(0,c.jsx)(i.h2,{id:"properties",children:"Properties"}),"\n",(0,c.jsxs)(i.h3,{id:"public-currentrowindex--integer",children:[(0,c.jsx)(i.code,{children:"public CurrentRowIndex"})," \u2192 ",(0,c.jsx)(i.code,{children:"Integer"})]}),"\n",(0,c.jsx)(i.hr,{}),"\n",(0,c.jsx)(i.h2,{id:"methods",children:"Methods"}),"\n",(0,c.jsx)(i.h3,{id:"public-void-loadstring-csvstring-boolean-hasheaders",children:(0,c.jsx)(i.code,{children:"public void load(String csvString, Boolean hasHeaders)"})}),"\n",(0,c.jsx)(i.p,{children:"Load contents from a string"}),"\n",(0,c.jsx)(i.h3,{id:"public-void-reset",children:(0,c.jsx)(i.code,{children:"public void reset()"})}),"\n",(0,c.jsx)(i.p,{children:"Reset to beginning of file"}),"\n",(0,c.jsx)(i.h3,{id:"public-row-getnextrow",children:(0,c.jsx)(i.code,{children:"public Row getNextRow()"})}),"\n",(0,c.jsx)(i.p,{children:"Get next CSV row, return null if no more rows Does custom parsing so we don't have to parse whole string at once Some of this could be done with regex and could be tightened up as a whole."}),"\n",(0,c.jsx)(i.hr,{}),"\n",(0,c.jsx)(i.h2,{id:"classes",children:"Classes"}),"\n",(0,c.jsx)(i.h3,{id:"config",children:"Config"}),"\n",(0,c.jsx)(i.p,{children:"Defines structure of a CSV"}),"\n",(0,c.jsx)(i.p,{children:(0,c.jsx)(i.strong,{children:"Inheritance"})}),"\n",(0,c.jsxs)(i.p,{children:[(0,c.jsx)(i.a,{href:"../apex/core/AqRestResource.md",children:"AqRestResource"}),"\n>\nConfig"]}),"\n",(0,c.jsx)(i.h4,{id:"constructors-1",children:"Constructors"}),"\n",(0,c.jsx)(i.h5,{id:"public-config",children:(0,c.jsx)(i.code,{children:"public Config()"})}),"\n",(0,c.jsx)(i.hr,{}),"\n",(0,c.jsx)(i.h4,{id:"fields-1",children:"Fields"}),"\n",(0,c.jsxs)(i.h5,{id:"public-thecolumnmap--mapltstringcolumndefgt",children:[(0,c.jsx)(i.code,{children:"public theColumnMap"})," \u2192 ",(0,c.jsx)(i.code,{children:"Map&lt;String,ColumnDef&gt;"})]}),"\n",(0,c.jsx)(i.p,{children:"Column defs mapped by name"}),"\n",(0,c.jsx)(i.hr,{}),"\n",(0,c.jsx)(i.h4,{id:"properties-1",children:"Properties"}),"\n",(0,c.jsxs)(i.h5,{id:"public-separator--string",children:[(0,c.jsx)(i.code,{children:"public Separator"})," \u2192 ",(0,c.jsx)(i.code,{children:"String"})]}),"\n",(0,c.jsxs)(i.h5,{id:"public-delimiter--string",children:[(0,c.jsx)(i.code,{children:"public Delimiter"})," \u2192 ",(0,c.jsx)(i.code,{children:"String"})]}),"\n",(0,c.jsxs)(i.h5,{id:"public-columns--listltcolumndefgt",children:[(0,c.jsx)(i.code,{children:"public Columns"})," \u2192 ",(0,c.jsx)(i.code,{children:"List&lt;ColumnDef&gt;"})]}),"\n",(0,c.jsxs)(i.h5,{id:"public-columnmap--mapltstringcolumndefgt",children:[(0,c.jsx)(i.code,{children:"public ColumnMap"})," \u2192 ",(0,c.jsx)(i.code,{children:"Map&lt;String,ColumnDef&gt;"})]}),"\n",(0,c.jsx)(i.hr,{}),"\n",(0,c.jsx)(i.h4,{id:"methods-1",children:"Methods"}),"\n",(0,c.jsx)(i.h5,{id:"protected-override-void-dovalidate",children:(0,c.jsx)(i.code,{children:"protected override void doValidate()"})}),"\n",(0,c.jsx)(i.hr,{}),"\n",(0,c.jsx)(i.h3,{id:"columndef",children:"ColumnDef"}),"\n",(0,c.jsx)(i.p,{children:"Defines a column in a CSV"}),"\n",(0,c.jsx)(i.p,{children:(0,c.jsx)(i.strong,{children:"Inheritance"})}),"\n",(0,c.jsxs)(i.p,{children:[(0,c.jsx)(i.a,{href:"../apex/core/AqRestResource.md",children:"AqRestResource"}),"\n>\nColumnDef"]}),"\n",(0,c.jsx)(i.h4,{id:"properties-2",children:"Properties"}),"\n",(0,c.jsxs)(i.h5,{id:"public-name--string",children:[(0,c.jsx)(i.code,{children:"public Name"})," \u2192 ",(0,c.jsx)(i.code,{children:"String"})]}),"\n",(0,c.jsxs)(i.h5,{id:"public-datatype--string",children:[(0,c.jsx)(i.code,{children:"public DataType"})," \u2192 ",(0,c.jsx)(i.code,{children:"String"})]}),"\n",(0,c.jsxs)(i.h5,{id:"public-maxlength--integer",children:[(0,c.jsx)(i.code,{children:"public MaxLength"})," \u2192 ",(0,c.jsx)(i.code,{children:"Integer"})]}),"\n",(0,c.jsxs)(i.h5,{id:"public-required--boolean",children:[(0,c.jsx)(i.code,{children:"public Required"})," \u2192 ",(0,c.jsx)(i.code,{children:"Boolean"})]}),"\n",(0,c.jsx)(i.hr,{}),"\n",(0,c.jsx)(i.h4,{id:"methods-2",children:"Methods"}),"\n",(0,c.jsx)(i.h5,{id:"protected-override-void-dovalidate-1",children:(0,c.jsx)(i.code,{children:"protected override void doValidate()"})}),"\n",(0,c.jsx)(i.hr,{}),"\n",(0,c.jsx)(i.h3,{id:"row",children:"Row"}),"\n",(0,c.jsx)(i.p,{children:"One row of values from CSV file, values are mapped by column name"}),"\n",(0,c.jsx)(i.h4,{id:"constructors-2",children:"Constructors"}),"\n",(0,c.jsx)(i.h5,{id:"public-rowaqcsv-csv-integer-index",children:(0,c.jsx)(i.code,{children:"public Row(AqCsv csv, Integer index)"})}),"\n",(0,c.jsx)(i.hr,{}),"\n",(0,c.jsx)(i.h4,{id:"properties-3",children:"Properties"}),"\n",(0,c.jsxs)(i.h5,{id:"public-index--integer",children:[(0,c.jsx)(i.code,{children:"public Index"})," \u2192 ",(0,c.jsx)(i.code,{children:"Integer"})]}),"\n",(0,c.jsx)(i.p,{children:"Row number in the file"}),"\n",(0,c.jsxs)(i.h5,{id:"public-values--mapltstringobjectgt",children:[(0,c.jsx)(i.code,{children:"public Values"})," \u2192 ",(0,c.jsx)(i.code,{children:"Map&lt;String,object&gt;"})]}),"\n",(0,c.jsx)(i.p,{children:"List of values mapped by column name"}),"\n",(0,c.jsxs)(i.h5,{id:"public-result--aqresult",children:[(0,c.jsx)(i.code,{children:"public Result"})," \u2192 ",(0,c.jsx)(i.code,{children:"AqResult"})]}),"\n",(0,c.jsx)(i.p,{children:"Warning or error information on the row"}),"\n",(0,c.jsx)(i.hr,{}),"\n",(0,c.jsx)(i.h4,{id:"methods-3",children:"Methods"}),"\n",(0,c.jsx)(i.h5,{id:"public-void-addvaluecolumndef-column-string-stringvalue",children:(0,c.jsx)(i.code,{children:"public void addValue(ColumnDef column, String stringValue)"})}),"\n",(0,c.jsx)(i.p,{children:"Add string value"}),"\n",(0,c.jsx)(i.h5,{id:"public-object-getvaluestring-columnname",children:(0,c.jsx)(i.code,{children:"public object getValue(String columnName)"})}),"\n",(0,c.jsx)(i.h5,{id:"public-string-getstringvaluestring-columnname",children:(0,c.jsx)(i.code,{children:"public String getStringValue(String columnName)"})}),"\n",(0,c.jsx)(i.h5,{id:"public-id-getidvaluestring-columnname",children:(0,c.jsx)(i.code,{children:"public Id getIdValue(String columnName)"})}),"\n",(0,c.jsx)(i.h5,{id:"public-boolean-getbooleanvaluestring-columnname",children:(0,c.jsx)(i.code,{children:"public Boolean getBooleanValue(String columnName)"})}),"\n",(0,c.jsx)(i.h5,{id:"public-date-getdatevaluestring-columnname",children:(0,c.jsx)(i.code,{children:"public Date getDateValue(String columnName)"})}),"\n",(0,c.jsx)(i.h5,{id:"public-time-gettimevaluestring-columnname",children:(0,c.jsx)(i.code,{children:"public Time getTimeValue(String columnName)"})}),"\n",(0,c.jsx)(i.h5,{id:"public-datetime-getdatetimevaluestring-columnname",children:(0,c.jsx)(i.code,{children:"public Datetime getDatetimeValue(String columnName)"})}),"\n",(0,c.jsx)(i.h5,{id:"public-integer-getintegervaluestring-columnname",children:(0,c.jsx)(i.code,{children:"public Integer getIntegerValue(String columnName)"})}),"\n",(0,c.jsx)(i.h5,{id:"public-decimal-getdecimalvaluestring-columnname",children:(0,c.jsx)(i.code,{children:"public Decimal getDecimalValue(String columnName)"})}),"\n",(0,c.jsx)(i.h5,{id:"public-void-validateandconvertlistltcolumndefgt-columns",children:(0,c.jsx)(i.code,{children:"public void validateAndConvert(List&lt;ColumnDef&gt; columns)"})}),"\n",(0,c.jsx)(i.p,{children:"Check all column values for required and data type, and convert to the right data type Set results into the Result property Should only be run once per row."}),"\n",(0,c.jsx)(i.hr,{}),"\n",(0,c.jsx)(i.hr,{})]})}function u(e={}){const{wrapper:i}={...(0,d.R)(),...e.components};return i?(0,c.jsx)(i,{...e,children:(0,c.jsx)(a,{...e})}):a(e)}}}]);