"use strict";(self.webpackChunkAqLib_documentation_website=self.webpackChunkAqLib_documentation_website||[]).push([[1769],{28453:(e,t,r)=>{r.d(t,{R:()=>l,x:()=>i});var s=r(96540);const n={},d=s.createContext(n);function l(e){const t=s.useContext(d);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),s.createElement(d.Provider,{value:t},e.children)}},74701:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"modules/enterprise/AqMethodArguments","title":"AqMethodArguments","description":"ISTEST","source":"@site/../documentation/modules/enterprise/AqMethodArguments.md","sourceDirName":"modules/enterprise","slug":"/modules/enterprise/AqMethodArguments","permalink":"/modules/enterprise/AqMethodArguments","draft":false,"unlisted":false,"editUrl":"https://bitbucket.org/aquiva/aqlib/src/main/documentation/../documentation/modules/enterprise/AqMethodArguments.md","tags":[],"version":"current","lastUpdatedBy":"Artem Kniazev","lastUpdatedAt":1719971610000,"frontMatter":{"layout":"default","autogenerated":true},"sidebar":"documentation","previous":{"title":"AqMatchersReturnValue","permalink":"/modules/enterprise/AqMatchersReturnValue"},"next":{"title":"AqMethodCallRecorder","permalink":"/modules/enterprise/AqMethodCallRecorder"}}');var n=r(74848),d=r(28453);const l={layout:"default",autogenerated:!0},i="AqMethodArguments",c={},o=[{value:"Constructors",id:"constructors",level:2},{value:"<code>public AqMethodArguments(List&lt;Object&gt; argValues)</code>",id:"public-aqmethodargumentslistobject-argvalues",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Fields",id:"fields",level:2},{value:"<code>public argValues</code> \u2192 <code>List&lt;Object&gt;</code>",id:"public-argvalues--listobject",level:3},{value:"Methods",id:"methods",level:2},{value:"<code>public Boolean equals(Object comparedObject)</code>",id:"public-boolean-equalsobject-comparedobject",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns",level:4},{value:"<code>public Integer hashCode()</code>",id:"public-integer-hashcode",level:3},{value:"Returns",id:"returns-1",level:4}];function a(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:["[ This file is autogenerated from apexdoc ]","\n",(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"aqmethodarguments",children:"AqMethodArguments"})}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.code,{children:"ISTEST"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Group"})," modules/enterprise"]}),"\n",(0,n.jsx)(t.h2,{id:"constructors",children:"Constructors"}),"\n",(0,n.jsx)(t.h3,{id:"public-aqmethodargumentslistobject-argvalues",children:(0,n.jsx)(t.code,{children:"public AqMethodArguments(List<Object> argValues)"})}),"\n",(0,n.jsx)(t.p,{children:"Wrapper object which encapsulates the argument values supplied during a given method call."}),"\n",(0,n.jsx)(t.h4,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Param"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsx)(t.tbody,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"argValues"})}),(0,n.jsx)(t.td,{children:"The called method arguments"})]})})]}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.h2,{id:"fields",children:"Fields"}),"\n",(0,n.jsxs)(t.h3,{id:"public-argvalues--listobject",children:[(0,n.jsx)(t.code,{children:"public argValues"})," \u2192 ",(0,n.jsx)(t.code,{children:"List<Object>"})]}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(t.h3,{id:"public-boolean-equalsobject-comparedobject",children:(0,n.jsx)(t.code,{children:"public Boolean equals(Object comparedObject)"})}),"\n",(0,n.jsx)(t.p,{children:"Standard equals override."}),"\n",(0,n.jsx)(t.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Param"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsx)(t.tbody,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"comparedObject"})}),(0,n.jsx)(t.td,{children:"The object whose equality we are verifying"})]})})]}),"\n",(0,n.jsx)(t.h4,{id:"returns",children:"Returns"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsx)(t.tbody,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"Boolean"})}),(0,n.jsx)(t.td,{children:"Boolean True if meaningfully equivalent, false otherwise."})]})})]}),"\n",(0,n.jsx)(t.h3,{id:"public-integer-hashcode",children:(0,n.jsx)(t.code,{children:"public Integer hashCode()"})}),"\n",(0,n.jsx)(t.p,{children:"Standard hashCode override."}),"\n",(0,n.jsx)(t.h4,{id:"returns-1",children:"Returns"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsx)(t.tbody,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"Integer"})}),(0,n.jsx)(t.td,{children:"Integer The generated hashCode"})]})})]}),"\n",(0,n.jsx)(t.hr,{})]})}function h(e={}){const{wrapper:t}={...(0,d.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}}}]);