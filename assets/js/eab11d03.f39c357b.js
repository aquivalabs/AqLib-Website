"use strict";(self.webpackChunkAqLib_documentation_website=self.webpackChunkAqLib_documentation_website||[]).push([[3626],{28453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>s});var t=i(96540);const r={},c=t.createContext(r);function a(e){const n=t.useContext(c);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(c.Provider,{value:n},e.children)}},83277:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>s,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"front/wire-service-sync/README","title":"Wire Service Sync","description":"Usage","source":"@site/../documentation/front/wire-service-sync/README.md","sourceDirName":"front/wire-service-sync","slug":"/front/wire-service-sync/","permalink":"/AqLib-Website/front/wire-service-sync/","draft":false,"unlisted":false,"editUrl":"https://bitbucket.org/aquiva/aqlib/src/main/documentation/../documentation/front/wire-service-sync/README.md","tags":[],"version":"current","lastUpdatedBy":"Nikolay Tishakin","lastUpdatedAt":1727446087000,"frontMatter":{"link_to_source":"AqLib/lwc/wire-service-sync"},"sidebar":"documentation","previous":{"title":"State Management Pattern","permalink":"/AqLib-Website/front/state-management/"},"next":{"title":"Modules","permalink":"/AqLib-Website/category/modules"}}');var r=i(74848),c=i(28453);const a={link_to_source:"AqLib/lwc/wire-service-sync"},s="Wire Service Sync",o={},l=[{value:"Usage",id:"usage",level:2},{value:"Full Example",id:"full-example",level:2},{value:"How to Add a custom @wire service provider",id:"how-to-add-a-custom-wire-service-provider",level:2},{value:"How to include in an already existing project",id:"how-to-include-in-an-already-existing-project",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"wire-service-sync",children:"Wire Service Sync"})}),"\n",(0,r.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(n.p,{children:"Extend you component with mixed class generated on the fly"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"\nexport default class Mappings extends Mixin(LightningElement)\n    .with(AccountObjectWireProvider, CachedDataWireProvider).addWireSync(){}\n"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Pass a base class to extend from to a Mixin function (",(0,r.jsx)(n.code,{children:"LightningElement"})," in this case)."]}),"\n",(0,r.jsxs)(n.li,{children:["Call ",(0,r.jsx)(n.code,{children:".with"})," and pass provider you want to make available for the component (",(0,r.jsx)(n.code,{children:"AccountObjectWireProvider"}),", ",(0,r.jsx)(n.code,{children:"CachedDataWireProvider"})," in this case)."]}),"\n",(0,r.jsxs)(n.li,{children:["Call ",(0,r.jsx)(n.code,{children:"addWireSync"})," to add ",(0,r.jsx)(n.code,{children:"wireSyncResolver()"})," method to your component."]}),"\n",(0,r.jsxs)(n.li,{children:["In the place where you need to ensure @wire data from providers is available subscribe to the result promise from ",(0,r.jsx)(n.code,{children:"this.wireSyncResolver()"})," call."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"full-example",children:"Full Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"export default class Mappings extends Mixin(LightningElement).with(AccountObjectWireProvider, CachedDataWireProvider).addWireSync() {\n\n    connectedCallback() {\n\n        this.wireSyncResolver().then(this.init.bind(this));\n    }\n    \n    async init() {\n        // Some code that required data from \n        // AccountObjectWireProvider and CachedDataWireProvider to be available\n    }\n}\n"})}),"\n",(0,r.jsx)(n.h2,{id:"how-to-add-a-custom-wire-service-provider",children:"How to Add a custom @wire service provider"}),"\n",(0,r.jsx)(n.p,{children:"The provider is a function that returns a class that has to have the following things:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["a variable initialized with ",(0,r.jsx)(n.code,{children:"new Resolver()"})," (",(0,r.jsx)(n.code,{children:"accountObjectWireProviderResolver"})," in this case)"]}),"\n",(0,r.jsxs)(n.li,{children:["static variable called ",(0,r.jsx)(n.code,{children:"WIRE_RESOLVER_NAME"})," that is initialized with the name of the variable from\nthe previous point (",(0,r.jsx)(n.code,{children:"accountObjectWireProviderResolver"}),");"]}),"\n",(0,r.jsxs)(n.li,{children:["@wire service callback that calls method ",(0,r.jsx)(n.code,{children:".resolve()"})," of the variable from the point 1 when the data is available"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["The value of WIRE_RESOLVER_NAME has to be unique within the list of the providers for a specific component\nFor example ",(0,r.jsx)(n.code,{children:".with(AccountObjectWireProvider, CachedDataWireProvider)"})," uniqueness is required only across this call not across all project\nbut it's better for the value to be unique across the whole project to prevent bugs."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"export const AccountObjectWireProvider = baseClass => {\n\n    return class extends baseClass {\n\n        static WIRE_RESOLVER_NAME = 'accountObjectWireProviderResolver';\n\n        accountObjectWireProviderResolver = new Resolver();\n\n        @wire(getObjectInfo, { objectApiName: ACCOUNT })\n        accountObjectInfoCallback({ data }) {\n            if (data) {\n                this.accObjectData = data;\n                this.accountObjectWireProviderResolver.resolve();\n            }\n        }\n\n        accObjectData = null;\n    };\n};\n"})}),"\n",(0,r.jsx)(n.h2,{id:"how-to-include-in-an-already-existing-project",children:"How to include in an already existing project"}),"\n",(0,r.jsxs)(n.p,{children:["This feature is actually an extension to an already existing ",(0,r.jsx)(n.code,{children:"Mixin"})," framework from AqLib so you just have to tweak your ",(0,r.jsx)(n.code,{children:"Mixin"})," class\na little to leverage this feature."]})]})}function h(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);