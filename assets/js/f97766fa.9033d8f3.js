"use strict";(self.webpackChunkAqLib_documentation_website=self.webpackChunkAqLib_documentation_website||[]).push([[4405],{28453:(e,t,r)=>{r.d(t,{R:()=>n,x:()=>d});var s=r(96540);const c={},i=s.createContext(c);function n(e){const t=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:n(e.components),s.createElement(i.Provider,{value:t},e.children)}},56735:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>h,contentTitle:()=>d,default:()=>o,frontMatter:()=>n,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"modules/enterprise/AqMatch","title":"AqMatch","description":"ISTEST","source":"@site/../documentation/modules/enterprise/AqMatch.md","sourceDirName":"modules/enterprise","slug":"/modules/enterprise/AqMatch","permalink":"/modules/enterprise/AqMatch","draft":false,"unlisted":false,"editUrl":"https://bitbucket.org/aquiva/aqlib/src/main/documentation/../documentation/modules/enterprise/AqMatch.md","tags":[],"version":"current","lastUpdatedBy":"Artem Kniazev","lastUpdatedAt":1719971610000,"frontMatter":{"layout":"default","autogenerated":true},"sidebar":"documentation","previous":{"title":"AqIArgumentMatcher","permalink":"/modules/enterprise/AqIArgumentMatcher"},"next":{"title":"AqMatcherDefinitions","permalink":"/modules/enterprise/AqMatcherDefinitions"}}');var c=r(74848),i=r(28453);const n={layout:"default",autogenerated:!0},d="AqMatch",h={},l=[{value:"Fields",id:"fields",level:2},{value:"<code>public isMatching</code> \u2192 <code>Boolean</code>",id:"public-ismatching--boolean",level:3},{value:"Methods",id:"methods",level:2},{value:"<code>public static List&lt;AqIArgumentMatcher&gt; getAndClearMatchers(Integer expectedSize)</code>",id:"public-static-listaqiargumentmatcher-getandclearmatchersinteger-expectedsize",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"<code>public static Boolean matchesAllArgs(AqMethodArguments invokedMethodArguments, List&lt;AqIArgumentMatcher&gt; targetMatchers)</code>",id:"public-static-boolean-matchesallargsaqmethodarguments-invokedmethodarguments-listaqiargumentmatcher-targetmatchers",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"<code>public static Object isNull()</code>",id:"public-static-object-isnull",level:3},{value:"Returns",id:"returns-2",level:4},{value:"<code>public static Object eq(Object toMatch)</code>",id:"public-static-object-eqobject-tomatch",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-3",level:4},{value:"<code>public static Object matches(AqIArgumentMatcher matcher)</code>",id:"public-static-object-matchesaqiargumentmatcher-matcher",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-4",level:4}];function a(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:["[ This file is autogenerated from apexdoc ]","\n",(0,c.jsx)(t.header,{children:(0,c.jsx)(t.h1,{id:"aqmatch",children:"AqMatch"})}),"\n",(0,c.jsx)(t.p,{children:(0,c.jsx)(t.code,{children:"ISTEST"})}),"\n",(0,c.jsxs)(t.p,{children:[(0,c.jsx)(t.strong,{children:"Group"})," modules/enterprise"]}),"\n",(0,c.jsx)(t.h2,{id:"fields",children:"Fields"}),"\n",(0,c.jsxs)(t.h3,{id:"public-ismatching--boolean",children:[(0,c.jsx)(t.code,{children:"public isMatching"})," \u2192 ",(0,c.jsx)(t.code,{children:"Boolean"})]}),"\n",(0,c.jsx)(t.hr,{}),"\n",(0,c.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,c.jsx)(t.h3,{id:"public-static-listaqiargumentmatcher-getandclearmatchersinteger-expectedsize",children:(0,c.jsx)(t.code,{children:"public static List<AqIArgumentMatcher> getAndClearMatchers(Integer expectedSize)"})}),"\n",(0,c.jsx)(t.p,{children:"Used internally by the mocking framework, you shouldn't need to call this method directly. Copies the registered matchers, and then switches matching mode off."}),"\n",(0,c.jsx)(t.h4,{id:"parameters",children:"Parameters"}),"\n",(0,c.jsxs)(t.table,{children:[(0,c.jsx)(t.thead,{children:(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.th,{children:"Param"}),(0,c.jsx)(t.th,{children:"Description"})]})}),(0,c.jsx)(t.tbody,{children:(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:(0,c.jsx)(t.code,{children:"expectedSize"})}),(0,c.jsx)(t.td,{children:"The expected number of matchers to be returned.                      If this does not match the actual value an expection is thrown."})]})})]}),"\n",(0,c.jsx)(t.h4,{id:"returns",children:"Returns"}),"\n",(0,c.jsxs)(t.table,{children:[(0,c.jsx)(t.thead,{children:(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.th,{children:"Type"}),(0,c.jsx)(t.th,{children:"Description"})]})}),(0,c.jsx)(t.tbody,{children:(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:(0,c.jsx)(t.code,{children:"List<AqIArgumentMatcher>"})}),(0,c.jsxs)(t.td,{children:[(0,c.jsx)(t.code,{children:"List<AqIArgumentMatcher>"})," The registered matchers, collected while in matching mode."]})]})})]}),"\n",(0,c.jsx)(t.h3,{id:"public-static-boolean-matchesallargsaqmethodarguments-invokedmethodarguments-listaqiargumentmatcher-targetmatchers",children:(0,c.jsx)(t.code,{children:"public static Boolean matchesAllArgs(AqMethodArguments invokedMethodArguments, List<AqIArgumentMatcher> targetMatchers)"})}),"\n",(0,c.jsx)(t.p,{children:"Used internally by the mocking framework, you shouldn't need to call this method directly. Compares all supplied method arg values to the supplied target matchers."}),"\n",(0,c.jsx)(t.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,c.jsxs)(t.table,{children:[(0,c.jsx)(t.thead,{children:(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.th,{children:"Param"}),(0,c.jsx)(t.th,{children:"Description"})]})}),(0,c.jsxs)(t.tbody,{children:[(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:(0,c.jsx)(t.code,{children:"invokedMethodArguments"})}),(0,c.jsx)(t.td,{children:"The arguments supplied when the method was invoked"})]}),(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:(0,c.jsx)(t.code,{children:"targetMatchers"})}),(0,c.jsx)(t.td,{children:"The matchers the arguments need to be compared with"})]})]})]}),"\n",(0,c.jsx)(t.h4,{id:"returns-1",children:"Returns"}),"\n",(0,c.jsxs)(t.table,{children:[(0,c.jsx)(t.thead,{children:(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.th,{children:"Type"}),(0,c.jsx)(t.th,{children:"Description"})]})}),(0,c.jsx)(t.tbody,{children:(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:(0,c.jsx)(t.code,{children:"Boolean"})}),(0,c.jsx)(t.td,{children:"Boolean True if all arg values satisfy all of the supplied matchers."})]})})]}),"\n",(0,c.jsx)(t.h3,{id:"public-static-object-isnull",children:(0,c.jsx)(t.code,{children:"public static Object isNull()"})}),"\n",(0,c.jsx)(t.p,{children:"Registers a matcher which will check if the method is called with an arg that matches isNull"}),"\n",(0,c.jsx)(t.h4,{id:"returns-2",children:"Returns"}),"\n",(0,c.jsxs)(t.table,{children:[(0,c.jsx)(t.thead,{children:(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.th,{children:"Type"}),(0,c.jsx)(t.th,{children:"Description"})]})}),(0,c.jsx)(t.tbody,{children:(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:(0,c.jsx)(t.code,{children:"Object"})}),(0,c.jsx)(t.td,{children:"Object A dummy object of the correct type, so that when called inline as part of a method call, the correct method is invoked. (You may need to cast down to your specific object type)"})]})})]}),"\n",(0,c.jsx)(t.h3,{id:"public-static-object-eqobject-tomatch",children:(0,c.jsx)(t.code,{children:"public static Object eq(Object toMatch)"})}),"\n",(0,c.jsx)(t.p,{children:"Registers a matcher which will check if the method is called with an arg that matches eq"}),"\n",(0,c.jsx)(t.h4,{id:"parameters-2",children:"Parameters"}),"\n",(0,c.jsxs)(t.table,{children:[(0,c.jsx)(t.thead,{children:(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.th,{children:"Param"}),(0,c.jsx)(t.th,{children:"Description"})]})}),(0,c.jsx)(t.tbody,{children:(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:(0,c.jsx)(t.code,{children:"toMatch"})}),(0,c.jsx)(t.td,{children:"The Object to be compared"})]})})]}),"\n",(0,c.jsx)(t.h4,{id:"returns-3",children:"Returns"}),"\n",(0,c.jsxs)(t.table,{children:[(0,c.jsx)(t.thead,{children:(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.th,{children:"Type"}),(0,c.jsx)(t.th,{children:"Description"})]})}),(0,c.jsx)(t.tbody,{children:(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:(0,c.jsx)(t.code,{children:"Object"})}),(0,c.jsx)(t.td,{children:"Object A dummy object of the correct type, so that when called inline as part of a method call, the correct method is invoked. (You may need to cast down to your specific object type)"})]})})]}),"\n",(0,c.jsx)(t.h3,{id:"public-static-object-matchesaqiargumentmatcher-matcher",children:(0,c.jsx)(t.code,{children:"public static Object matches(AqIArgumentMatcher matcher)"})}),"\n",(0,c.jsx)(t.p,{children:"Registers a matcher which will be stubbed/verified against."}),"\n",(0,c.jsx)(t.h4,{id:"parameters-3",children:"Parameters"}),"\n",(0,c.jsxs)(t.table,{children:[(0,c.jsx)(t.thead,{children:(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.th,{children:"Param"}),(0,c.jsx)(t.th,{children:"Description"})]})}),(0,c.jsx)(t.tbody,{children:(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:(0,c.jsx)(t.code,{children:"matcher"})}),(0,c.jsx)(t.td,{children:"The matcher that needs to be compared"})]})})]}),"\n",(0,c.jsx)(t.h4,{id:"returns-4",children:"Returns"}),"\n",(0,c.jsxs)(t.table,{children:[(0,c.jsx)(t.thead,{children:(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.th,{children:"Type"}),(0,c.jsx)(t.th,{children:"Description"})]})}),(0,c.jsx)(t.tbody,{children:(0,c.jsxs)(t.tr,{children:[(0,c.jsx)(t.td,{children:(0,c.jsx)(t.code,{children:"Object"})}),(0,c.jsx)(t.td,{children:"Object Always returns null. This can then be cast into the correct arg type so that the right method is called on the mock objects."})]})})]}),"\n",(0,c.jsx)(t.hr,{})]})}function o(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,c.jsx)(t,{...e,children:(0,c.jsx)(a,{...e})}):a(e)}}}]);