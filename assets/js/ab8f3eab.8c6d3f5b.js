"use strict";(self.webpackChunkAqLib_documentation_website=self.webpackChunkAqLib_documentation_website||[]).push([[8325],{3421:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"modules/enterprise/AqApexMocksUtils","title":"AqApexMocksUtils","description":"Group modules/enterprise","source":"@site/../documentation/modules/enterprise/AqApexMocksUtils.md","sourceDirName":"modules/enterprise","slug":"/modules/enterprise/AqApexMocksUtils","permalink":"/AqLib-Website/modules/enterprise/AqApexMocksUtils","draft":false,"unlisted":false,"editUrl":"https://bitbucket.org/aquiva/aqlib/src/main/documentation/../documentation/modules/enterprise/AqApexMocksUtils.md","tags":[],"version":"current","lastUpdatedBy":"Artem Kniazev","lastUpdatedAt":1719971610000,"frontMatter":{"layout":"default","autogenerated":true},"sidebar":"documentation","previous":{"title":"AqApexMocks","permalink":"/AqLib-Website/modules/enterprise/AqApexMocks"},"next":{"title":"abstract AqDataBuilderBase","permalink":"/AqLib-Website/modules/enterprise/AqDataBuilderBase"}}');var n=i(74848),r=i(28453);const a={layout:"default",autogenerated:!0},l="AqApexMocksUtils",c={},o=[{value:"Methods",id:"methods",level:2},{value:"<code>public static Object makeRelationship(Type parentsType, List&lt;SObject&gt; parents, SObjectField relationshipField, List&lt;List&lt;SObject&gt;&gt; children)</code>",id:"public-static-object-makerelationshiptype-parentstype-listsobject-parents-sobjectfield-relationshipfield-listlistsobject-children",level:3},{value:"Example",id:"example",level:4},{value:"<code>public static Object makeRelationship(String parentTypeName, String childTypeName, List&lt;SObject&gt; parents, String relationshipFieldName, List&lt;List&lt;SObject&gt;&gt; children)</code>",id:"public-static-object-makerelationshipstring-parenttypename-string-childtypename-listsobject-parents-string-relationshipfieldname-listlistsobject-children",level:3},{value:"<code>public static Object setReadOnlyFields(SObject objInstance, Type deserializeType, Map&lt;SObjectField,Object&gt; properties)</code>",id:"public-static-object-setreadonlyfieldssobject-objinstance-type-deserializetype-mapsobjectfieldobject-properties",level:3}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:["[ This file is autogenerated from apexdoc ]","\n",(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"aqapexmocksutils",children:"AqApexMocksUtils"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Group"})," modules/enterprise"]}),"\n",(0,n.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(t.h3,{id:"public-static-object-makerelationshiptype-parentstype-listsobject-parents-sobjectfield-relationshipfield-listlistsobject-children",children:(0,n.jsx)(t.code,{children:"public static Object makeRelationship(Type parentsType, List<SObject> parents, SObjectField relationshipField, List<List<SObject>> children)"})}),"\n",(0,n.jsxs)(t.p,{children:["This is taken from ",(0,n.jsx)(t.a,{href:"https://gist.github.com/afawcett/8dbfc0e1d8c43c982881",children:"https://gist.github.com/afawcett/8dbfc0e1d8c43c982881"}),". This method works on the principle that serializing and deserialising child records is supported ",(0,n.jsx)(t.code,{children:"apex System.assertEquals(1, ((List&lt;Master__c&gt;) JSON.deserialize( JSON.serialize( [select Id, Name, (select Id, Name from Children__r) from Master__c]), List&lt;Master__c&gt;.class)) [0].Children__r.size()); "})," This method results internally in constructing this JSON, before deserialising it back into SObject's"]}),"\n",(0,n.jsx)(t.h4,{id:"example",children:"Example"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-apex",children:'[\n    {\n        "attributes": {\n            "type": "Master__c",\n            "url": "/services/data/v32.0/sobjects/Master__c/a0YG0000005Jn5uMAC"\n        },\n        "Name": "Fred",\n        "Id": "a0YG0000005Jn5uMAC",\n        "Children__r": {\n            "totalSize": 1,\n            "done": true,\n            "records": [\n                {\n                    "attributes": {\n                        "type": "Child__c",\n                        "url": "/services/data/v32.0/sobjects/Child__c/a0ZG0000006JGPAMA4"\n                    },\n                    "Name": "Bob",\n                    "Id": "a0ZG0000006JGPAMA4",\n                    "Master__c": "a0YG0000005Jn5uMAC"\n                }\n            ]\n        }\n ]\n'})}),"\n",(0,n.jsx)(t.h3,{id:"public-static-object-makerelationshipstring-parenttypename-string-childtypename-listsobject-parents-string-relationshipfieldname-listlistsobject-children",children:(0,n.jsx)(t.code,{children:"public static Object makeRelationship(String parentTypeName, String childTypeName, List<SObject> parents, String relationshipFieldName, List<List<SObject>> children)"})}),"\n",(0,n.jsx)(t.p,{children:"Generic overload to makeRelationship. Enables creation of relationships in a loosely-coupled manner."}),"\n",(0,n.jsx)(t.h3,{id:"public-static-object-setreadonlyfieldssobject-objinstance-type-deserializetype-mapsobjectfieldobject-properties",children:(0,n.jsx)(t.code,{children:"public static Object setReadOnlyFields(SObject objInstance, Type deserializeType, Map<SObjectField,Object> properties)"})}),"\n",(0,n.jsx)(t.p,{children:"Gives the ability to set test values on formula and other read-only fields of mock SObjects"}),"\n",(0,n.jsx)(t.hr,{})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},28453:(e,t,i)=>{i.d(t,{R:()=>a,x:()=>l});var s=i(96540);const n={},r=s.createContext(n);function a(e){const t=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);