"use strict";(self.webpackChunkAqLib_documentation_website=self.webpackChunkAqLib_documentation_website||[]).push([[408],{28453:(e,t,i)=>{i.d(t,{R:()=>a,x:()=>s});var n=i(96540);const o={},r=n.createContext(o);function a(e){const t=n.useContext(r);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),n.createElement(r.Provider,{value:t},e.children)}},90936:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"modules/mapping-tool/AqMappingToolService","title":"AqMappingToolService","description":"Group modules/mapping tool","source":"@site/../documentation/modules/mapping-tool/AqMappingToolService.md","sourceDirName":"modules/mapping-tool","slug":"/modules/mapping-tool/AqMappingToolService","permalink":"/modules/mapping-tool/AqMappingToolService","draft":false,"unlisted":false,"editUrl":"https://bitbucket.org/aquiva/aqlib/src/main/documentation/../documentation/modules/mapping-tool/AqMappingToolService.md","tags":[],"version":"current","lastUpdatedBy":"Evgeny Vladimirov","lastUpdatedAt":1720105076000,"frontMatter":{"layout":"default","autogenerated":true},"sidebar":"documentation","previous":{"title":"AqMappingConfigurationWrapper","permalink":"/modules/mapping-tool/AqMappingConfigurationWrapper"},"next":{"title":"AqObjectDefinitionMappingData","permalink":"/modules/mapping-tool/AqObjectDefinitionMappingData"}}');var o=i(74848),r=i(28453);const a={layout:"default",autogenerated:!0},s="AqMappingToolService",d={},c=[{value:"Fields",id:"fields",level:2},{value:"<code>public AQRESULT_TYPE_PARSING_RESULT</code> \u2192 <code>String</code>",id:"public-aqresult_type_parsing_result--string",level:3},{value:"Methods",id:"methods",level:2},{value:"<code>public static String mapObjectsToJSON(List&lt;Id&gt; rootObjectIds, ObjectDefinitionMapping__mdt mappingMetadata)</code>",id:"public-static-string-mapobjectstojsonlistid-rootobjectids-objectdefinitionmapping__mdt-mappingmetadata",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Example",id:"example",level:4},{value:"<code>public static String mapObjectsToJSON(List&lt;Id&gt; rootObjectIds, String mappingMetadataName)</code>",id:"public-static-string-mapobjectstojsonlistid-rootobjectids-string-mappingmetadataname",level:3},{value:"<code>public static String mapObjectsToJSON(List&lt;Id&gt; rootObjectIds, ObjectDefinitionMapping__mdt mappingMetadata, AqSObjectToJSONConverter converter)</code>",id:"public-static-string-mapobjectstojsonlistid-rootobjectids-objectdefinitionmapping__mdt-mappingmetadata-aqsobjecttojsonconverter-converter",level:3},{value:"<code>public static String mapObjectsToJSON(List&lt;Id&gt; rootObjectIds, String mappingMetadataName, AqSObjectToJSONConverter converter)</code>",id:"public-static-string-mapobjectstojsonlistid-rootobjectids-string-mappingmetadataname-aqsobjecttojsonconverter-converter",level:3},{value:"<code>public static AqResult upsertRecordsFromJson(String jsonString, ObjectDefinitionMapping__mdt mappingMetadata, Boolean requireExternalIds)</code>",id:"public-static-aqresult-upsertrecordsfromjsonstring-jsonstring-objectdefinitionmapping__mdt-mappingmetadata-boolean-requireexternalids",level:3},{value:"Example",id:"example-1",level:4},{value:"<code>public static AqResult upsertRecordsFromJson(String jsonString, String mappingName, Boolean requireExternalIds)</code>",id:"public-static-aqresult-upsertrecordsfromjsonstring-jsonstring-string-mappingname-boolean-requireexternalids",level:3},{value:"<code>public static AqResult upsertRecordsFromJson(String jsonString, String mappingName, Boolean requireExternalIds, AqFieldDefinitionMappingData fieldDefinitionData, AqObjectDefinitionMappingData objectDefinitionData)</code>",id:"public-static-aqresult-upsertrecordsfromjsonstring-jsonstring-string-mappingname-boolean-requireexternalids-aqfielddefinitionmappingdata-fielddefinitiondata-aqobjectdefinitionmappingdata-objectdefinitiondata",level:3}];function l(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:["[ This file is autogenerated from apexdoc ]","\n",(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"aqmappingtoolservice",children:"AqMappingToolService"})}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"Group"})," modules/mapping tool"]}),"\n",(0,o.jsx)(t.h2,{id:"fields",children:"Fields"}),"\n",(0,o.jsxs)(t.h3,{id:"public-aqresult_type_parsing_result--string",children:[(0,o.jsx)(t.code,{children:"public AQRESULT_TYPE_PARSING_RESULT"})," \u2192 ",(0,o.jsx)(t.code,{children:"String"})]}),"\n",(0,o.jsx)(t.hr,{}),"\n",(0,o.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,o.jsx)(t.h3,{id:"public-static-string-mapobjectstojsonlistid-rootobjectids-objectdefinitionmapping__mdt-mappingmetadata",children:(0,o.jsx)(t.code,{children:"public static String mapObjectsToJSON(List<Id> rootObjectIds, ObjectDefinitionMapping__mdt mappingMetadata)"})}),"\n",(0,o.jsx)(t.p,{children:"This method maps a list of root object IDs to a JSON document based on the provided mapping metadata. It retrieves and maps data from the root objects and their related objects at multiple levels."}),"\n",(0,o.jsx)(t.h4,{id:"parameters",children:"Parameters"}),"\n",(0,o.jsxs)(t.table,{children:[(0,o.jsx)(t.thead,{children:(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.th,{children:"Param"}),(0,o.jsx)(t.th,{children:"Description"})]})}),(0,o.jsxs)(t.tbody,{children:[(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"rootObjectIds"})}),(0,o.jsx)(t.td,{children:"List of IDs of the root objects to be mapped."})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"mappingMetadata"})}),(0,o.jsx)(t.td,{children:"Metadata defining the mapping for the objects."})]})]})]}),"\n",(0,o.jsx)(t.h4,{id:"returns",children:"Returns"}),"\n",(0,o.jsxs)(t.table,{children:[(0,o.jsx)(t.thead,{children:(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.th,{children:"Type"}),(0,o.jsx)(t.th,{children:"Description"})]})}),(0,o.jsx)(t.tbody,{children:(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"String"})}),(0,o.jsx)(t.td,{children:"Example JSON structure:"})]})})]}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"Precondition"})," - Object Definition created for Account. - Field Definition records created for Account (a list of fields with different data types). - Object Definition created for Mobile Phone (Account related record, lookup). - Field Definition records created for Mobile Phone. - Object Definition created for Phone Model (Mobile Phone related record, master-detail). - Field Definition records created for Phone Model. - Accounts with several opportunities (to test rollup field), associated Mobile Phones and Phone Models created."]}),"\n",(0,o.jsx)(t.h4,{id:"example",children:"Example"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-apex",children:'[\n  {\n    "Mobile Phones": [\n      {\n        "Phone Model": [\n          {\n            "MF to attach": "...",\n            "ExtIdPM": "1",\n            "MF Model": "Phone Model 1"\n          },\n          {\n            "MF to attach": "...",\n            "ExtIdPM": "2",\n            "MF Model": "Phone Model 2"\n          }\n        ],\n        "Phone Vendor": "Mobile Phone Name",\n        "AccountToAttach": "...",\n        "Ext Id": 321\n      }\n    ],\n    "Car Models": [\n      {\n        "Close Date": "2022-02-24",\n        "Stage Name": "Prospecting",\n        "Model Name": "opp"\n      }\n    ],\n    "Picklist": null,\n    "Checkbox": true,\n    "Currency": 500.47,\n    "JSONid": "qwerty2",\n    "MultiPicklist": "q;w;y",\n    "Formula": true,\n    "Opportunities Count": 1,\n    "Brand": "qwerty2",\n    "Currency Code": "USD"\n  }\n]\n'})}),"\n",(0,o.jsx)(t.h3,{id:"public-static-string-mapobjectstojsonlistid-rootobjectids-string-mappingmetadataname",children:(0,o.jsx)(t.code,{children:"public static String mapObjectsToJSON(List<Id> rootObjectIds, String mappingMetadataName)"})}),"\n",(0,o.jsx)(t.h3,{id:"public-static-string-mapobjectstojsonlistid-rootobjectids-objectdefinitionmapping__mdt-mappingmetadata-aqsobjecttojsonconverter-converter",children:(0,o.jsx)(t.code,{children:"public static String mapObjectsToJSON(List<Id> rootObjectIds, ObjectDefinitionMapping__mdt mappingMetadata, AqSObjectToJSONConverter converter)"})}),"\n",(0,o.jsx)(t.h3,{id:"public-static-string-mapobjectstojsonlistid-rootobjectids-string-mappingmetadataname-aqsobjecttojsonconverter-converter",children:(0,o.jsx)(t.code,{children:"public static String mapObjectsToJSON(List<Id> rootObjectIds, String mappingMetadataName, AqSObjectToJSONConverter converter)"})}),"\n",(0,o.jsx)(t.h3,{id:"public-static-aqresult-upsertrecordsfromjsonstring-jsonstring-objectdefinitionmapping__mdt-mappingmetadata-boolean-requireexternalids",children:(0,o.jsx)(t.code,{children:"public static AqResult upsertRecordsFromJson(String jsonString, ObjectDefinitionMapping__mdt mappingMetadata, Boolean requireExternalIds)"})}),"\n",(0,o.jsx)(t.p,{children:"This method updates records based on the provided JSON string. The JSON string should contain the fields to be updated, and the method will use External Ids to match records for updating. Precondition: - Object Definition configured for User object. - Field Definitions created for User object (Last Name is External Id)."}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"Usage"})," - The User record with the specified Last Name should be updated with the new First Name value. - If the update is successful, the debug log should display the Record Id of the updated User record. - If there is an error, the debug log should display the error message."]}),"\n",(0,o.jsx)(t.h4,{id:"example-1",children:"Example"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-apex",children:"String jsonString = '[{\"LastName\" : \"USER LAST NAME\", \"FirstName\" : \"NEW VALUE FOR NAME \"}]';\nAqResult result = AqMappingToolService.upsertRecordsFromJson(jsonString, 'User', true);\nif (result.Severity == AqResult.SEVERITY_SUCCESS) {\n    for (AqRecordWithChildren rec : (List<AqRecordWithChildren>)result.ReturnValue) {\n        System.debug('Record Id: ' + rec.record.Id);\n    }\n} else {\n    System.debug('Error message: ' + result.Message);\n}\n"})}),"\n",(0,o.jsx)(t.h3,{id:"public-static-aqresult-upsertrecordsfromjsonstring-jsonstring-string-mappingname-boolean-requireexternalids",children:(0,o.jsx)(t.code,{children:"public static AqResult upsertRecordsFromJson(String jsonString, String mappingName, Boolean requireExternalIds)"})}),"\n",(0,o.jsx)(t.h3,{id:"public-static-aqresult-upsertrecordsfromjsonstring-jsonstring-string-mappingname-boolean-requireexternalids-aqfielddefinitionmappingdata-fielddefinitiondata-aqobjectdefinitionmappingdata-objectdefinitiondata",children:(0,o.jsx)(t.code,{children:"public static AqResult upsertRecordsFromJson(String jsonString, String mappingName, Boolean requireExternalIds, AqFieldDefinitionMappingData fieldDefinitionData, AqObjectDefinitionMappingData objectDefinitionData)"})}),"\n",(0,o.jsx)(t.hr,{})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}}}]);