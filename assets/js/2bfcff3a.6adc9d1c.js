"use strict";(self.webpackChunkAqLib_documentation_website=self.webpackChunkAqLib_documentation_website||[]).push([[7194],{28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>i});var o=n(96540);const s={},c=o.createContext(s);function a(e){const t=o.useContext(c);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),o.createElement(c.Provider,{value:t},e.children)}},79646:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"apex/post-copy-tasks/AqPostCopyManager","title":"AqPostCopyManager","description":"Implemented types","source":"@site/../documentation/apex/post-copy-tasks/AqPostCopyManager.md","sourceDirName":"apex/post-copy-tasks","slug":"/apex/post-copy-tasks/AqPostCopyManager","permalink":"/AqLib-Website/apex/post-copy-tasks/AqPostCopyManager","draft":false,"unlisted":false,"editUrl":"https://bitbucket.org/aquiva/aqlib/src/main/documentation/../documentation/apex/post-copy-tasks/AqPostCopyManager.md","tags":[],"version":"current","lastUpdatedBy":"Artem Kniazev","lastUpdatedAt":1719971610000,"frontMatter":{"layout":"default","autogenerated":true},"sidebar":"documentation","previous":{"title":"AqLocale","permalink":"/AqLib-Website/apex/post-copy-tasks/AqLocale"},"next":{"title":"Query Selectors","permalink":"/AqLib-Website/apex/query/"}}');var s=n(74848),c=n(28453);const a={layout:"default",autogenerated:!0},i="AqPostCopyManager",l={},d=[{value:"Fields",id:"fields",level:2},{value:"<code>public overallSuccess</code> \u2192 <code>Boolean</code>",id:"public-overallsuccess--boolean",level:3},{value:"Methods",id:"methods",level:2},{value:"<code>public void runApexClass(SandboxContext context)</code>",id:"public-void-runapexclasssandboxcontext-context",level:3},{value:"<code>public static void createLogObj(String className, Exception e)</code>",id:"public-static-void-createlogobjstring-classname-exception-e",level:3},{value:"<code>public static List&lt;IPostCopyHandler&gt; getHandlers()</code>",id:"public-static-listipostcopyhandler-gethandlers",level:3},{value:"Interfaces",id:"interfaces",level:2},{value:"IPostCopyHandler",id:"ipostcopyhandler",level:3},{value:"Methods",id:"methods-1",level:4},{value:"<code>public void run(SandboxContext context)</code>",id:"public-void-runsandboxcontext-context",level:5},{value:"<code>public String getClassName()</code>",id:"public-string-getclassname",level:5}];function r(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",hr:"hr",p:"p",strong:"strong",...(0,c.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:["[ This file is autogenerated from apexdoc ]","\n",(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"aqpostcopymanager",children:"AqPostCopyManager"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Implemented types"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"SandboxPostCopy",children:"SandboxPostCopy"})}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Group"})," apex/post copy tasks"]}),"\n",(0,s.jsx)(t.h2,{id:"fields",children:"Fields"}),"\n",(0,s.jsxs)(t.h3,{id:"public-overallsuccess--boolean",children:[(0,s.jsx)(t.code,{children:"public overallSuccess"})," \u2192 ",(0,s.jsx)(t.code,{children:"Boolean"})]}),"\n",(0,s.jsx)(t.p,{children:"Indicates successful PostCopy processing"}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(t.h3,{id:"public-void-runapexclasssandboxcontext-context",children:(0,s.jsx)(t.code,{children:"public void runApexClass(SandboxContext context)"})}),"\n",(0,s.jsx)(t.p,{children:"Runs automatically when sandbox copy process finishes"}),"\n",(0,s.jsx)(t.h3,{id:"public-static-void-createlogobjstring-classname-exception-e",children:(0,s.jsx)(t.code,{children:"public static void createLogObj(String className, Exception e)"})}),"\n",(0,s.jsx)(t.p,{children:"Create the error debug log. In the future we can replace it with the custom Log object."}),"\n",(0,s.jsx)(t.h3,{id:"public-static-listipostcopyhandler-gethandlers",children:(0,s.jsx)(t.code,{children:"public static List<IPostCopyHandler> getHandlers()"})}),"\n",(0,s.jsx)(t.p,{children:"Get and create the workers from the custom settings."}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"interfaces",children:"Interfaces"}),"\n",(0,s.jsx)(t.h3,{id:"ipostcopyhandler",children:"IPostCopyHandler"}),"\n",(0,s.jsx)(t.p,{children:"Interface that handles post-copy handlers"}),"\n",(0,s.jsx)(t.h4,{id:"methods-1",children:"Methods"}),"\n",(0,s.jsx)(t.h5,{id:"public-void-runsandboxcontext-context",children:(0,s.jsx)(t.code,{children:"public void run(SandboxContext context)"})}),"\n",(0,s.jsx)(t.p,{children:"Method should implement any post-copy logic"}),"\n",(0,s.jsx)(t.h5,{id:"public-string-getclassname",children:(0,s.jsx)(t.code,{children:"public String getClassName()"})}),"\n",(0,s.jsx)(t.p,{children:"In order to identify the offending class that has caused an exception this method should be implemented"}),"\n",(0,s.jsx)(t.hr,{})]})}function p(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(r,{...e})}):r(e)}}}]);