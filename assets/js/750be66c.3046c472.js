"use strict";(self.webpackChunkAqLib_documentation_website=self.webpackChunkAqLib_documentation_website||[]).push([[8333],{28309:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>a,frontMatter:()=>i,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"modules/enterprise/AqMethodInvocation","title":"AqMethodInvocation","description":"ISTEST","source":"@site/../documentation/modules/enterprise/AqMethodInvocation.md","sourceDirName":"modules/enterprise","slug":"/modules/enterprise/AqMethodInvocation","permalink":"/modules/enterprise/AqMethodInvocation","draft":false,"unlisted":false,"editUrl":"https://bitbucket.org/aquiva/aqlib/src/main/documentation/../documentation/modules/enterprise/AqMethodInvocation.md","tags":[],"version":"current","lastUpdatedBy":"Artem Kniazev","lastUpdatedAt":1719971610000,"frontMatter":{"layout":"default","autogenerated":true},"sidebar":"documentation","previous":{"title":"AqMethodCountRecorder","permalink":"/modules/enterprise/AqMethodCountRecorder"},"next":{"title":"AqMethodReturnValue","permalink":"/modules/enterprise/AqMethodReturnValue"}}');var d=n(74848),s=n(28453);const i={layout:"default",autogenerated:!0},c="AqMethodInvocation",o={},l=[{value:"Methods",id:"methods",level:2},{value:"<code>public AqMethodArguments getMethodsArguments()</code>",id:"public-aqmethodarguments-getmethodsarguments",level:3},{value:"<code>public String getMethodName()</code>",id:"public-string-getmethodname",level:3},{value:"Returns",id:"returns",level:4},{value:"<code>public Object getMockInstance()</code>",id:"public-object-getmockinstance",level:3},{value:"Returns",id:"returns-1",level:4},{value:"<code>public Boolean equals(Object comparedObject)</code>",id:"public-boolean-equalsobject-comparedobject",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns-2",level:4},{value:"<code>public Integer hashCode()</code>",id:"public-integer-hashcode",level:3},{value:"Returns",id:"returns-3",level:4},{value:"<code>public static AqMethodInvocation createInstance(Object stubbedObject, String stubbedMethodName, Type returnType, List&lt;Type&gt; listOfParamTypes, List&lt;Object&gt; listOfArgs)</code>",id:"public-static-aqmethodinvocation-createinstanceobject-stubbedobject-string-stubbedmethodname-type-returntype-listtype-listofparamtypes-listobject-listofargs",level:3}];function h(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:["[ This file is autogenerated from apexdoc ]","\n",(0,d.jsx)(t.header,{children:(0,d.jsx)(t.h1,{id:"aqmethodinvocation",children:"AqMethodInvocation"})}),"\n",(0,d.jsx)(t.p,{children:(0,d.jsx)(t.code,{children:"ISTEST"})}),"\n",(0,d.jsxs)(t.p,{children:[(0,d.jsx)(t.strong,{children:"Group"})," modules/enterprise"]}),"\n",(0,d.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,d.jsx)(t.h3,{id:"public-aqmethodarguments-getmethodsarguments",children:(0,d.jsx)(t.code,{children:"public AqMethodArguments getMethodsArguments()"})}),"\n",(0,d.jsx)(t.h3,{id:"public-string-getmethodname",children:(0,d.jsx)(t.code,{children:"public String getMethodName()"})}),"\n",(0,d.jsx)(t.p,{children:"Returns mocked method name"}),"\n",(0,d.jsx)(t.h4,{id:"returns",children:"Returns"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Description"})]})}),(0,d.jsx)(t.tbody,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"String"})}),(0,d.jsx)(t.td,{children:"mocked method name"})]})})]}),"\n",(0,d.jsx)(t.h3,{id:"public-object-getmockinstance",children:(0,d.jsx)(t.code,{children:"public Object getMockInstance()"})}),"\n",(0,d.jsx)(t.p,{children:"Returns mocked method instance"}),"\n",(0,d.jsx)(t.h4,{id:"returns-1",children:"Returns"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Description"})]})}),(0,d.jsx)(t.tbody,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Object"})}),(0,d.jsx)(t.td,{children:"mocked method instance"})]})})]}),"\n",(0,d.jsx)(t.h3,{id:"public-boolean-equalsobject-comparedobject",children:(0,d.jsx)(t.code,{children:"public Boolean equals(Object comparedObject)"})}),"\n",(0,d.jsx)(t.p,{children:"Standard equals override."}),"\n",(0,d.jsx)(t.h4,{id:"parameters",children:"Parameters"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Param"}),(0,d.jsx)(t.th,{children:"Description"})]})}),(0,d.jsx)(t.tbody,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"comparedObject"})}),(0,d.jsx)(t.td,{children:"The object whose equality we are verifying"})]})})]}),"\n",(0,d.jsx)(t.h4,{id:"returns-2",children:"Returns"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Description"})]})}),(0,d.jsx)(t.tbody,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Boolean"})}),(0,d.jsx)(t.td,{children:"Boolean True if meaningfully equivalent, false otherwise."})]})})]}),"\n",(0,d.jsx)(t.h3,{id:"public-integer-hashcode",children:(0,d.jsx)(t.code,{children:"public Integer hashCode()"})}),"\n",(0,d.jsx)(t.p,{children:"Standard hashCode override."}),"\n",(0,d.jsx)(t.h4,{id:"returns-3",children:"Returns"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Type"}),(0,d.jsx)(t.th,{children:"Description"})]})}),(0,d.jsx)(t.tbody,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Integer"})}),(0,d.jsx)(t.td,{children:"Integer The generated hashCode"})]})})]}),"\n",(0,d.jsx)(t.h3,{id:"public-static-aqmethodinvocation-createinstanceobject-stubbedobject-string-stubbedmethodname-type-returntype-listtype-listofparamtypes-listobject-listofargs",children:(0,d.jsx)(t.code,{children:"public static AqMethodInvocation createInstance(Object stubbedObject, String stubbedMethodName, Type returnType, List<Type> listOfParamTypes, List<Object> listOfArgs)"})}),"\n",(0,d.jsx)(t.hr,{})]})}function a(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,d.jsx)(t,{...e,children:(0,d.jsx)(h,{...e})}):h(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>c});var r=n(96540);const d={},s=r.createContext(d);function i(e){const t=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:i(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);