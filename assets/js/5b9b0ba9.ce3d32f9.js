"use strict";(self.webpackChunkAqLib_documentation_website=self.webpackChunkAqLib_documentation_website||[]).push([[5579],{8333:e=>{e.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"/delete-all-debug-logs","metadata":{"permalink":"/AqLib-Website/snippets/delete-all-debug-logs","editUrl":"https://bitbucket.org/aquiva/aqlib/src/main/snippets/../snippets/delete-all-debug-logs.md","source":"@site/../snippets/delete-all-debug-logs.md","title":"Delete all debug logs","description":"Mac/Linux only. Sets a debug log for 12 hours for a specific user","date":"2024-10-01T15:43:11.000Z","tags":[],"hasTruncateMarker":true,"authors":[{"name":"Evgenii Azimzhanov","email":"eazimzhanov@aquivalabs.com","image_url":"https://ca.slack-edge.com/T0GJ0ACVB-U3Y5VKY68-755f09b400ae-512","url":"https://aquivalabs.slack.com/team/U3Y5VKY68","imageURL":"https://ca.slack-edge.com/T0GJ0ACVB-U3Y5VKY68-755f09b400ae-512","socials":{},"key":null,"page":null}],"frontMatter":{"authors":{"name":"Evgenii Azimzhanov","email":"eazimzhanov@aquivalabs.com","image_url":"https://ca.slack-edge.com/T0GJ0ACVB-U3Y5VKY68-755f09b400ae-512","url":"https://aquivalabs.slack.com/team/U3Y5VKY68","imageURL":"https://ca.slack-edge.com/T0GJ0ACVB-U3Y5VKY68-755f09b400ae-512"}},"unlisted":false,"lastUpdatedAt":1727797391000,"lastUpdatedBy":"Evgenii Azimzhanov","nextItem":{"title":"Set the Debug Logs for a user","permalink":"/AqLib-Website/snippets/set-debug-logs-for-user"}},"content":"Mac/Linux only. Sets a debug log for 12 hours for a specific user\\n\\n## Installation:\\n1. Add the [script](##Script) to .bash_profile\\n2. Reload your bash profile by running `source ~/.bash_profile`\\n\x3c!-- truncate --\x3e\\n## Usage:\\n```\\n  sf_del_logs qa_env\\n  sf_del_logs uat_env\\n  sf_del_logs prod_env\\n```\\n\\n## Script\\n```\\nsf_del_logs() { sf data query -o \\"$1\\" -q \\"SELECT Id FROM ApexLog\\" -r csv > apexLogs.csv && sf data delete bulk -o \\"$1\\" -s ApexLog -f apexLogs.csv -w 10 ; rm apexLogs.csv }\\n```"},{"id":"/set-debug-logs-for-user","metadata":{"permalink":"/AqLib-Website/snippets/set-debug-logs-for-user","editUrl":"https://bitbucket.org/aquiva/aqlib/src/main/snippets/../snippets/set-debug-logs-for-user.md","source":"@site/../snippets/set-debug-logs-for-user.md","title":"Set the Debug Logs for a user","description":"Sets a debug log for 12 hours for a specific user","date":"2024-08-12T18:03:15.000Z","tags":[],"hasTruncateMarker":true,"authors":[{"name":"Evgenii Azimzhanov","email":"eazimzhanov@aquivalabs.com","image_url":"https://ca.slack-edge.com/T0GJ0ACVB-U3Y5VKY68-755f09b400ae-512","url":"https://aquivalabs.slack.com/team/U3Y5VKY68","imageURL":"https://ca.slack-edge.com/T0GJ0ACVB-U3Y5VKY68-755f09b400ae-512","socials":{},"key":null,"page":null}],"frontMatter":{"authors":{"name":"Evgenii Azimzhanov","email":"eazimzhanov@aquivalabs.com","image_url":"https://ca.slack-edge.com/T0GJ0ACVB-U3Y5VKY68-755f09b400ae-512","url":"https://aquivalabs.slack.com/team/U3Y5VKY68","imageURL":"https://ca.slack-edge.com/T0GJ0ACVB-U3Y5VKY68-755f09b400ae-512"}},"unlisted":false,"lastUpdatedAt":1723485795000,"lastUpdatedBy":"Evgenii Azimzhanov","prevItem":{"title":"Delete all debug logs","permalink":"/AqLib-Website/snippets/delete-all-debug-logs"},"nextItem":{"title":"Reset User after sandbox refresh","permalink":"/AqLib-Website/snippets/reset-user-after-refresh"}},"content":"Sets a debug log for 12 hours for a specific user\\n\\n## Usage:\\n```bash\\n  log_dev.sh [-o arg] [-u arg] -z -h\\n  -o  target org to set debug log\\n  -u  Name of an entity to set debug log\\n```\\n\x3c!-- truncate --\x3e\\n## Examples:\\n```\\n  sh log_dev.sh -o a_ea -u Azimzhanov -z\\n  sh log_dev.sh -o a_ea -u Azimzhanov\\n  sh log_dev.sh -o a_ea -u \\"Evgenii Azimzhanov\\"\\n  sh log_dev.sh -o a_ea -u \\"Evgenii Azi\\"\\n```\\n\\n# Script\\n```bash\\n#!/bin/bash\\n\\nlog_debug() {\\n  [[ $DEBUG_MODE == true ]] && { separator; echo \\"${@}\\"; }\\n}\\n\\nlog_simple() {\\n  echo \\"${@}\\"\\n}\\n\\nseparator() {\\n  echo \\"-----------------------------------\\"\\n}\\n\\nparse_params() {\\n  while getopts \'u:o:hz\' opt; do\\n    case \\"$opt\\" in\\n      u) TRACING_ENTITY_NAME=\\"$OPTARG\\" ;;\\n      o) IN_ORG_ALIAS=\\"$OPTARG\\" ;;\\n      z) DEBUG_MODE=true ;;\\n      ?|h) show_usage; exit 1 ;;\\n    esac\\n  done\\n  shift \\"$(($OPTIND -1))\\"\\n  \\n  if [[ $DEBUG_MODE == true ]]; then\\n    log_debug \\"Received Params: \\"\\n    echo \\"TRACING_ENTITY_NAME: $TRACING_ENTITY_NAME\\"\\n    echo \\"IN_ORG_ALIAS: $IN_ORG_ALIAS\\"\\n    echo \\"DEBUG_MODE: $DEBUG_MODE\\"\\n  fi\\n}\\n\\nshow_usage() {\\n  cat << EOF\\n\\nSets a debug log for 12 hours\\n\\nUSAGE:\\n  $(basename $0) [-o arg] [-u arg] -z -h\\n  -o  target org to set debug log\\n  -u  Name of an entity to set debug log\\n\\nEXAMPLES:\\n  sh log_dev.sh -o a_ea -u Azimzhanov -z\\n\\nEOF\\n}\\n\\ncheck_and_handle_debug_level() {\\n  local debug_level_query=\\"SELECT Id FROM DebugLevel WHERE DeveloperName = \'$DEBUG_LEVEL_NAME\'\\"\\n  local debug_level_result=$(sf data query -o \\"$IN_ORG_ALIAS\\" -q \\"$debug_level_query\\" -t --json)\\n  DEBUG_LEVEL_ID=$(jq -r \'.result.records[0].Id\' <<< \\"$debug_level_result\\")\\n\\n  log_debug \\"Debug level Found $DEBUG_LEVEL_ID\\"\\n\\n  if [[ -z $DEBUG_LEVEL_ID || $DEBUG_LEVEL_ID == \\"null\\" ]]; then\\n    log_simple \\"Debug Level doesn\'t exist\\"\\n    DEBUG_LEVEL_ID=$(sf data record create -o \\"$IN_ORG_ALIAS\\" -s DebugLevel -t -v \\"ApexCode=FINEST ApexProfiling=INFO Callout=INFO Database=INFO System=INFO Validation=INFO Visualforce=INFO Workflow=INFO MasterLabel=\'$DEBUG_LEVEL_NAME\' DeveloperName=\'$DEBUG_LEVEL_NAME\'\\" | jq -r \'.result.id\')\\n    log_simple \\"Successfully created Debug Level with ID: $DEBUG_LEVEL_ID\\"\\n  else\\n    log_simple \\"Debug Level exists\\"\\n    sf data record update -o \\"$IN_ORG_ALIAS\\" -i \\"$DEBUG_LEVEL_ID\\" -s DebugLevel -t -v \\"ApexCode=FINEST ApexProfiling=INFO Callout=INFO Database=INFO System=INFO Validation=INFO Visualforce=INFO Workflow=INFO\\"\\n    log_simple \\"Successfully updated Debug Level record: $DEBUG_LEVEL_ID.\\"\\n  fi\\n}\\n\\ncheck_and_handle_trace_flag() {\\n  local trace_flag_query=\\"SELECT Id, DebugLevelId FROM TraceFlag WHERE TracedEntity.Name LIKE \'%$TRACING_ENTITY_NAME%\'\\"\\n  local trace_flag_result=$(sf data query -o \\"$IN_ORG_ALIAS\\" -q \\"$trace_flag_query\\" -t -r json)\\n  local traced_entity_ids=$(jq -r \'.result.records[].Id\' <<< \\"$trace_flag_result\\")\\n  local traced_entity_debug_level_id=$(jq -r \'.result.records[0].DebugLevelId\' <<< \\"$trace_flag_result\\")\\n\\n  local start_date=$(date -u \'+%Y-%m-%dT%H:%M:%S\')\\n  local expiration_date=$(date -u -v +12H \'+%Y-%m-%dT%H:%M:%S\')\\n\\n  for traced_entity_id in $traced_entity_ids\\n  do\\n    if [[ -n $traced_entity_id && $traced_entity_id != \\"null\\" ]]; then\\n      sf data record delete -o \\"$IN_ORG_ALIAS\\" -t -s TraceFlag -i \\"$traced_entity_id\\"\\n      log_simple \\"Deleted existing TraceFlag record with ID: $traced_entity_id\\"\\n    fi\\n  done\\n\\n  local user_query_result=$(sf data query -o \\"$IN_ORG_ALIAS\\" -t --json -q \\"SELECT Id, Name FROM User WHERE Name LIKE \'%$TRACING_ENTITY_NAME%\' LIMIT 1\\")\\n  local user_to_trace_id=$(jq -r \'.result.records[0].Id\' <<< \\"$user_query_result\\")\\n\\n  if [[ -z $user_to_trace_id || $user_to_trace_id == \\"null\\" ]]; then\\n    log_simple \\"Error: User to trace not found.\\"\\n    exit 1\\n  fi\\n\\n  log_debug \\"Found User to Trace, Id: $user_to_trace_id\\"\\n  local create_trace_flag_result=$(sf data record create -o \\"$IN_ORG_ALIAS\\" -t -s TraceFlag -v \\"TracedEntityId=$user_to_trace_id LogType=USER_DEBUG DebugLevelId=$DEBUG_LEVEL_ID StartDate=$start_date ExpirationDate=$expiration_date\\" --json)\\n  local create_trace_flag_success=$(jq -r \'.status\' <<< \\"$create_trace_flag_result\\")\\n\\n  if [[ $create_trace_flag_success == \\"0\\" ]]; then\\n    log_simple \\"Creating record for TraceFlag... Success\\"\\n  else\\n    log_simple \\"Creating record for TraceFlag... Error\\"\\n    log_simple \\"Error: $(jq -r \'.message\' <<< \\"$create_trace_flag_result\\")\\"\\n    exit 1\\n  fi\\n}\\n\\ndelete_excessive_logs() {\\n  local log_query=\\"SELECT Id FROM ApexLog ORDER BY SystemModstamp DESC LIMIT 1000\\"\\n  local log_result=$(sf data query -o \\"$IN_ORG_ALIAS\\" -q \\"$log_query\\" -t --json)\\n  \\n  if [[ -z $log_result || $log_result == \\"null\\" ]]; then\\n    log_simple \\"No logs found to delete.\\"\\n    return\\n  fi\\n\\n  local log_ids=$(jq -r \'.result.records[].Id\' <<< \\"$log_result\\")\\n\\n  # Create a CSV file with the log IDs\\n  echo \\"Id\\" > log_ids.csv\\n  for log_id in $log_ids\\n  do\\n    echo \\"$log_id\\" >> log_ids.csv\\n  done\\n\\n  # Delete logs in bulk using the CSV file\\n  sf data delete bulk -o \\"$IN_ORG_ALIAS\\" -s ApexLog -f log_ids.csv\\n\\n  # Remove the CSV file\\n  rm log_ids.csv\\n}\\n\\nIN_ORG_ALIAS=\\"\\"\\nTRACING_ENTITY_NAME=\\"\\"\\nDEBUG_MODE=false\\nSTART_DATE=$(date \'+%Y-%m-%dT%H:%M:%S\')\\nEXPIRATION_DATE=$(date -v +12H \'+%Y-%m-%dT%H:%M:%S\')\\nDEBUG_LEVEL_NAME=\\"Debugger_Custom\\"\\n\\nparse_params \\"$@\\"\\nlog_debug \\"Debug Mode is enabled\\"\\nlog_debug \\"Input Parameters:\\" \\"\\\\n\\" \\"Target org is: $IN_ORG_ALIAS\\" \\"\\\\n\\" \\"Tracing Entity Name is: $TRACING_ENTITY_NAME\\"\\ncheck_and_handle_debug_level\\ncheck_and_handle_trace_flag\\n# delete_excessive_logs\\n```"},{"id":"/reset-user-after-refresh","metadata":{"permalink":"/AqLib-Website/snippets/reset-user-after-refresh","editUrl":"https://bitbucket.org/aquiva/aqlib/src/main/snippets/../snippets/reset-user-after-refresh.md","source":"@site/../snippets/reset-user-after-refresh.md","title":"Reset User after sandbox refresh","description":"Usage examples","date":"2024-06-29T16:23:41.000Z","tags":[],"hasTruncateMarker":true,"authors":[{"name":"Evgenii Azimzhanov","email":"eazimzhanov@aquivalabs.com","image_url":"https://ca.slack-edge.com/T0GJ0ACVB-U3Y5VKY68-755f09b400ae-512","url":"https://aquivalabs.slack.com/team/U3Y5VKY68","imageURL":"https://ca.slack-edge.com/T0GJ0ACVB-U3Y5VKY68-755f09b400ae-512","socials":{},"key":null,"page":null}],"frontMatter":{"authors":{"name":"Evgenii Azimzhanov","email":"eazimzhanov@aquivalabs.com","image_url":"https://ca.slack-edge.com/T0GJ0ACVB-U3Y5VKY68-755f09b400ae-512","url":"https://aquivalabs.slack.com/team/U3Y5VKY68","imageURL":"https://ca.slack-edge.com/T0GJ0ACVB-U3Y5VKY68-755f09b400ae-512"}},"unlisted":false,"lastUpdatedAt":1719962641000,"lastUpdatedBy":"Artem Kniazev","prevItem":{"title":"Set the Debug Logs for a user","permalink":"/AqLib-Website/snippets/set-debug-logs-for-user"},"nextItem":{"title":"Last Viewed Records","permalink":"/AqLib-Website/snippets/last-viewed-records"}},"content":"Usage examples\\n```apex\\n// reset a user that contains name\\nresetUserAfterRefreshByName(\'Evgenii Azimzhanov\');\\nresetUserAfterRefreshByName(\'Evgenii Azi\');\\nresetUserAfterRefreshByName(\'Azi\');\\n\\n// reset a user by id\\nresetUserAfterRefreshById(\'0054M000003QHQNQA4\');\\n```\\n\\n\x3c!-- truncate --\x3e\\nScript\\n```apex\\npublic class ResetUserException extends Exception {}\\n\\n/**\\n * Resets the user after a refresh by their name.\\n * \\n * @param name The name of the user to reset.\\n * @throws ResetUserException if the name is empty.\\n * @throws ResetUserException if more than one user is found with the given name.\\n * @throws ResetUserException if user was not found\\n */\\npublic void resetUserAfterRefreshByName(String name) {\\n    if (String.isBlank(name)) {\\n        throw new ResetUserException(\'Empty name\');\\n    }\\n    List<User> users = selectUsers(name, null);\\n\\n    // validate that we found only single user by name\\n    User foundUser;\\n    for (User u : users) {\\n        if (u.Name.contains(name)) {\\n            if (foundUser != null) {\\n                throw new ResetUserException(\'Two users found\');\\n            } else {\\n                foundUser = u;\\n            }\\n        }\\n    }\\n\\n    resetUser(foundUser);\\n}\\n\\n/**\\n * Resets the user after a refresh by their Id\\n * \\n * @param userId The Id of the user to reset.\\n * @throws ResetUserException if user was not found\\n */\\npublic void resetUserAfterRefreshById(Id userId) {\\n    User foundUser = selectUsers(null, userId).get(0);\\n    resetUser(foundUser);\\n}\\n\\nprivate void resetUser(User userToReset) {\\n    if (userToReset == null) {\\n        throw new ResetUserException(\'Cannot find the user\');\\n    }\\n    // resetting user after refresh\\n    userToReset.isActive = true;\\n    if (userToReset.Email?.endsWith(\'.invalid\')) {\\n        userToReset.Email = userToReset.Email.replace(\'.invalid\', \'\');\\n    }\\n    userToReset.ProfileId = [SELECT Id FROM Profile WHERE Name = \'System Administrator\' LIMIT 1].Id;\\n\\n    update userToReset;\\n\\n    System.debug(\'___________________Success___________________\');\\n}\\n\\nprivate List<User> selectUsers(String name, Id userId) {\\n    String query = \'SELECT Id, Name, Email, Profile.Name, Profile.UserLicenseId, CompanyName, IsActive FROM User \';\\n\\n    if (!String.isBlank(name)) {\\n        query += \'WHERE Name LIKE \\\\\'%\' + name + \'%\\\\\'\';\\n    } else if (userId != null) {\\n        query += \'WHERE Id = :userId\';\\n    } else {\\n        throw new ResetUserException(\'Either name or userId must be provided\');\\n    }\\n    query += \' ORDER BY CompanyName NULLS LAST\';\\n\\n    return Database.query(query);\\n}\\n```"},{"id":"/last-viewed-records","metadata":{"permalink":"/AqLib-Website/snippets/last-viewed-records","editUrl":"https://bitbucket.org/aquiva/aqlib/src/main/snippets/../snippets/last-viewed-records.md","source":"@site/../snippets/last-viewed-records.md","title":"Last Viewed Records","description":"And you can as well mark record (trigger LastViewedDate to be updated) with FOR VIEW operator","date":"2024-06-28T15:29:28.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"Artem Kniazev","url":"https://aquivalabs.slack.com/team/U1JCA0TJ7","image_url":"https://ca.slack-edge.com/T0GJ0ACVB-U1JCA0TJ7-52f687c9a515-512","imageURL":"https://ca.slack-edge.com/T0GJ0ACVB-U1JCA0TJ7-52f687c9a515-512","socials":{},"key":null,"page":null}],"frontMatter":{"authors":{"name":"Artem Kniazev","url":"https://aquivalabs.slack.com/team/U1JCA0TJ7","image_url":"https://ca.slack-edge.com/T0GJ0ACVB-U1JCA0TJ7-52f687c9a515-512","imageURL":"https://ca.slack-edge.com/T0GJ0ACVB-U1JCA0TJ7-52f687c9a515-512"}},"unlisted":false,"lastUpdatedAt":1719962630000,"lastUpdatedBy":"Artem Kniazev","prevItem":{"title":"Reset User after sandbox refresh","permalink":"/AqLib-Website/snippets/reset-user-after-refresh"},"nextItem":{"title":"Single Currency Formatting","permalink":"/AqLib-Website/snippets/single-currency-formatting"}},"content":"```apex\\nSELECT Id FROM Whatever__c ORDER BY LastViewedDate DESC\\n```\\nAnd you can as well mark record (trigger LastViewedDate to be updated) with `FOR VIEW` operator\\n```apex\\nSELECT Id FROM Whatever__c ... FOR VIEW\\n```"},{"id":"/single-currency-formatting","metadata":{"permalink":"/AqLib-Website/snippets/single-currency-formatting","editUrl":"https://bitbucket.org/aquiva/aqlib/src/main/snippets/../snippets/single-currency-formatting.md","source":"@site/../snippets/single-currency-formatting.md","title":"Single Currency Formatting","description":"How to format currency strings on orgs where multi-currency is not enabled","date":"2024-06-28T15:29:28.000Z","tags":[],"hasTruncateMarker":false,"authors":[{"name":"Artem Kniazev","url":"https://aquivalabs.slack.com/team/U1JCA0TJ7","image_url":"https://ca.slack-edge.com/T0GJ0ACVB-U1JCA0TJ7-52f687c9a515-512","imageURL":"https://ca.slack-edge.com/T0GJ0ACVB-U1JCA0TJ7-52f687c9a515-512","socials":{},"key":null,"page":null}],"frontMatter":{"authors":{"name":"Artem Kniazev","url":"https://aquivalabs.slack.com/team/U1JCA0TJ7","image_url":"https://ca.slack-edge.com/T0GJ0ACVB-U1JCA0TJ7-52f687c9a515-512","imageURL":"https://ca.slack-edge.com/T0GJ0ACVB-U1JCA0TJ7-52f687c9a515-512"}},"unlisted":false,"lastUpdatedAt":1719962630000,"lastUpdatedBy":"Artem Kniazev","prevItem":{"title":"Last Viewed Records","permalink":"/AqLib-Website/snippets/last-viewed-records"}},"content":"How to format currency strings on orgs where multi-currency is not enabled\\nNo multi-currency means that there is no CurrencyIsoCode field available  \\nYou still can do currency formatting right in the SOQL\\n\\n```apex\\nOpportunity o = [SELECT FORMAT(Amount) AmountFormatted, Amount FROM Opportunity LIMIT 1];\\nSystem.debug(o.get(\'AmountFormatted\')); // 1 200,00$\\nSystem.debug(o.Amount); // 1200.00\\n```\\n\\n> Use FORMAT with the SELECT clause to apply localized formatting to standard and custom number, date, time, and currency fields.\\n> https://developer.salesforce.com/docs/atlas.en-us.soql_sosl.meta/soql_sosl/sforce_api_calls_soql_select_format.htm"}]}}')}}]);