"use strict";(self.webpackChunkAqLib_documentation_website=self.webpackChunkAqLib_documentation_website||[]).push([[7743],{28453:(e,t,s)=>{s.d(t,{R:()=>l,x:()=>r});var i=s(96540);const c={},a=i.createContext(c);function l(e){const t=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:l(e.components),i.createElement(a.Provider,{value:t},e.children)}},35155:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>n,frontMatter:()=>l,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"apex/core/AqTest","title":"AqTest","description":"ISTEST","source":"@site/../documentation/apex/core/AqTest.md","sourceDirName":"apex/core","slug":"/apex/core/AqTest","permalink":"/AqLib-Website/apex/core/AqTest","draft":false,"unlisted":false,"editUrl":"https://bitbucket.org/aquiva/aqlib/src/main/documentation/../documentation/apex/core/AqTest.md","tags":[],"version":"current","lastUpdatedBy":"Artem Kniazev","lastUpdatedAt":1719971610000,"frontMatter":{"layout":"default","autogenerated":true},"sidebar":"documentation","previous":{"title":"AqString","permalink":"/AqLib-Website/apex/core/AqString"},"next":{"title":"AqTypes","permalink":"/AqLib-Website/apex/core/AqTypes"}}');var c=s(74848),a=s(28453);const l={layout:"default",autogenerated:!0},r="AqTest",d={},o=[{value:"Fields",id:"fields",level:2},{value:"<code>public adminUser</code> \u2192 <code>User</code>",id:"public-adminuser--user",level:3},{value:"Methods",id:"methods",level:2},{value:"<code>public static void assertMultiSelectPicklistEquals(String expected, List&lt;String&gt; actual)</code>",id:"public-static-void-assertmultiselectpicklistequalsstring-expected-liststring-actual",level:3},{value:"<code>public static void assertMultiSelectPicklistEquals(List&lt;String&gt; expected, String actual)</code>",id:"public-static-void-assertmultiselectpicklistequalsliststring-expected-string-actual",level:3},{value:"<code>public static void assertBooleanEquals(Boolean expected, Boolean actual)</code>",id:"public-static-void-assertbooleanequalsboolean-expected-boolean-actual",level:3},{value:"<code>public static void assertNoErrorLogs()</code>",id:"public-static-void-assertnoerrorlogs",level:3},{value:"<code>public static void assertSuccess(AqResult result)</code>",id:"public-static-void-assertsuccessaqresult-result",level:3},{value:"<code>public static void assertAborted(AqResult result)</code>",id:"public-static-void-assertabortedaqresult-result",level:3},{value:"<code>public static void assertError(AqResult result)</code>",id:"public-static-void-asserterroraqresult-result",level:3},{value:"<code>public static void assertError(Type resultType, AqResult result)</code>",id:"public-static-void-asserterrortype-resulttype-aqresult-result",level:3},{value:"<code>public static void assertSuccess(Database saveResult)</code>",id:"public-static-void-assertsuccessdatabase-saveresult",level:3},{value:"<code>public static void assertDatabaseError(Database saveResult, String expectedStatusCode)</code>",id:"public-static-void-assertdatabaseerrordatabase-saveresult-string-expectedstatuscode",level:3},{value:"<code>public static void assertCustomValidationError(Database saveResult)</code>",id:"public-static-void-assertcustomvalidationerrordatabase-saveresult",level:3},{value:"<code>public static void setQueryParameter(String name, String value)</code>",id:"public-static-void-setqueryparameterstring-name-string-value",level:3},{value:"<code>public static void assertNoPageMessages()</code>",id:"public-static-void-assertnopagemessages",level:3},{value:"<code>public static void assertNoPageErrors()</code>",id:"public-static-void-assertnopageerrors",level:3},{value:"<code>public static void assertConfirmMessage()</code>",id:"public-static-void-assertconfirmmessage",level:3},{value:"<code>public static void assertWarningMessage()</code>",id:"public-static-void-assertwarningmessage",level:3},{value:"<code>public static void assertErrorMessage()</code>",id:"public-static-void-asserterrormessage",level:3},{value:"<code>public static void assertEmailsSent(String expectedSubjectLike, Set&lt;ID&gt; expectedWhoIds)</code>",id:"public-static-void-assertemailssentstring-expectedsubjectlike-setid-expectedwhoids",level:3},{value:"<code>public static void assertEmailsNotSent(String expectedSubjectLike, Set&lt;ID&gt; expectedWhoIds)</code>",id:"public-static-void-assertemailsnotsentstring-expectedsubjectlike-setid-expectedwhoids",level:3},{value:"<code>public static String getPicklistValue(SObjectField field, Integer index)</code>",id:"public-static-string-getpicklistvaluesobjectfield-field-integer-index",level:3},{value:"<code>public static TestObject__c getFullTestRecord()</code>",id:"public-static-testobject__c-getfulltestrecord",level:3},{value:"<code>public static void setup()</code>",id:"public-static-void-setup",level:3}];function u(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",p:"p",strong:"strong",...(0,a.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:["[ This file is autogenerated from apexdoc ]","\n",(0,c.jsx)(t.header,{children:(0,c.jsx)(t.h1,{id:"aqtest",children:"AqTest"})}),"\n",(0,c.jsx)(t.p,{children:(0,c.jsx)(t.code,{children:"ISTEST"})}),"\n",(0,c.jsx)(t.p,{children:"Helpers for testing"}),"\n",(0,c.jsxs)(t.p,{children:[(0,c.jsx)(t.strong,{children:"Group"})," apex/core"]}),"\n",(0,c.jsx)(t.h2,{id:"fields",children:"Fields"}),"\n",(0,c.jsxs)(t.h3,{id:"public-adminuser--user",children:[(0,c.jsx)(t.code,{children:"public adminUser"})," \u2192 ",(0,c.jsx)(t.code,{children:"User"})]}),"\n",(0,c.jsx)(t.hr,{}),"\n",(0,c.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,c.jsx)(t.h3,{id:"public-static-void-assertmultiselectpicklistequalsstring-expected-liststring-actual",children:(0,c.jsx)(t.code,{children:"public static void assertMultiSelectPicklistEquals(String expected, List<String> actual)"})}),"\n",(0,c.jsx)(t.h3,{id:"public-static-void-assertmultiselectpicklistequalsliststring-expected-string-actual",children:(0,c.jsx)(t.code,{children:"public static void assertMultiSelectPicklistEquals(List<String> expected, String actual)"})}),"\n",(0,c.jsx)(t.h3,{id:"public-static-void-assertbooleanequalsboolean-expected-boolean-actual",children:(0,c.jsx)(t.code,{children:"public static void assertBooleanEquals(Boolean expected, Boolean actual)"})}),"\n",(0,c.jsx)(t.h3,{id:"public-static-void-assertnoerrorlogs",children:(0,c.jsx)(t.code,{children:"public static void assertNoErrorLogs()"})}),"\n",(0,c.jsx)(t.h3,{id:"public-static-void-assertsuccessaqresult-result",children:(0,c.jsx)(t.code,{children:"public static void assertSuccess(AqResult result)"})}),"\n",(0,c.jsx)(t.h3,{id:"public-static-void-assertabortedaqresult-result",children:(0,c.jsx)(t.code,{children:"public static void assertAborted(AqResult result)"})}),"\n",(0,c.jsx)(t.h3,{id:"public-static-void-asserterroraqresult-result",children:(0,c.jsx)(t.code,{children:"public static void assertError(AqResult result)"})}),"\n",(0,c.jsx)(t.h3,{id:"public-static-void-asserterrortype-resulttype-aqresult-result",children:(0,c.jsx)(t.code,{children:"public static void assertError(Type resultType, AqResult result)"})}),"\n",(0,c.jsx)(t.h3,{id:"public-static-void-assertsuccessdatabase-saveresult",children:(0,c.jsx)(t.code,{children:"public static void assertSuccess(Database saveResult)"})}),"\n",(0,c.jsx)(t.h3,{id:"public-static-void-assertdatabaseerrordatabase-saveresult-string-expectedstatuscode",children:(0,c.jsx)(t.code,{children:"public static void assertDatabaseError(Database saveResult, String expectedStatusCode)"})}),"\n",(0,c.jsx)(t.h3,{id:"public-static-void-assertcustomvalidationerrordatabase-saveresult",children:(0,c.jsx)(t.code,{children:"public static void assertCustomValidationError(Database saveResult)"})}),"\n",(0,c.jsx)(t.h3,{id:"public-static-void-setqueryparameterstring-name-string-value",children:(0,c.jsx)(t.code,{children:"public static void setQueryParameter(String name, String value)"})}),"\n",(0,c.jsx)(t.h3,{id:"public-static-void-assertnopagemessages",children:(0,c.jsx)(t.code,{children:"public static void assertNoPageMessages()"})}),"\n",(0,c.jsx)(t.h3,{id:"public-static-void-assertnopageerrors",children:(0,c.jsx)(t.code,{children:"public static void assertNoPageErrors()"})}),"\n",(0,c.jsx)(t.h3,{id:"public-static-void-assertconfirmmessage",children:(0,c.jsx)(t.code,{children:"public static void assertConfirmMessage()"})}),"\n",(0,c.jsx)(t.h3,{id:"public-static-void-assertwarningmessage",children:(0,c.jsx)(t.code,{children:"public static void assertWarningMessage()"})}),"\n",(0,c.jsx)(t.h3,{id:"public-static-void-asserterrormessage",children:(0,c.jsx)(t.code,{children:"public static void assertErrorMessage()"})}),"\n",(0,c.jsx)(t.h3,{id:"public-static-void-assertemailssentstring-expectedsubjectlike-setid-expectedwhoids",children:(0,c.jsx)(t.code,{children:"public static void assertEmailsSent(String expectedSubjectLike, Set<ID> expectedWhoIds)"})}),"\n",(0,c.jsx)(t.h3,{id:"public-static-void-assertemailsnotsentstring-expectedsubjectlike-setid-expectedwhoids",children:(0,c.jsx)(t.code,{children:"public static void assertEmailsNotSent(String expectedSubjectLike, Set<ID> expectedWhoIds)"})}),"\n",(0,c.jsx)(t.h3,{id:"public-static-string-getpicklistvaluesobjectfield-field-integer-index",children:(0,c.jsx)(t.code,{children:"public static String getPicklistValue(SObjectField field, Integer index)"})}),"\n",(0,c.jsx)(t.h3,{id:"public-static-testobject__c-getfulltestrecord",children:(0,c.jsx)(t.code,{children:"public static TestObject__c getFullTestRecord()"})}),"\n",(0,c.jsx)(t.h3,{id:"public-static-void-setup",children:(0,c.jsx)(t.code,{children:"public static void setup()"})}),"\n",(0,c.jsx)(t.hr,{})]})}function n(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,c.jsx)(t,{...e,children:(0,c.jsx)(u,{...e})}):u(e)}}}]);