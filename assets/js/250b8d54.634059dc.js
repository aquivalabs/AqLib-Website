"use strict";(self.webpackChunkAqLib_documentation_website=self.webpackChunkAqLib_documentation_website||[]).push([[785],{25046:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>r,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"apex/core/AqEnv","title":"AqEnv","description":"Returns information about current Salesforce environment and controls settings such as for debugging and logging.","source":"@site/../documentation/apex/core/AqEnv.md","sourceDirName":"apex/core","slug":"/apex/core/AqEnv","permalink":"/AqLib-Website/apex/core/AqEnv","draft":false,"unlisted":false,"editUrl":"https://bitbucket.org/aquiva/aqlib/src/main/documentation/../documentation/apex/core/AqEnv.md","tags":[],"version":"current","lastUpdatedBy":"Artem Kniazev","lastUpdatedAt":1721818396000,"frontMatter":{"layout":"default","autogenerated":true},"sidebar":"documentation","previous":{"title":"AqDml","permalink":"/AqLib-Website/apex/core/AqDml"},"next":{"title":"virtual AqException","permalink":"/AqLib-Website/apex/core/AqException"}}');var c=n(74848),d=n(28453);const o={layout:"default",autogenerated:!0},s="AqEnv",r={},l=[{value:"Fields",id:"fields",level:2},{value:"<code>public namespaceOverride</code> \u2192 <code>String</code>",id:"public-namespaceoverride--string",level:3},{value:"<code>public nowOverride</code> \u2192 <code>DateTime</code>",id:"public-nowoverride--datetime",level:3},{value:"<code>public todayOverride</code> \u2192 <code>Date</code>",id:"public-todayoverride--date",level:3},{value:"Properties",id:"properties",level:2},{value:"<code>public isUsingStateCountryPicklists</code> \u2192 <code>Boolean</code>",id:"public-isusingstatecountrypicklists--boolean",level:3},{value:"<code>public namespace</code> \u2192 <code>String</code>",id:"public-namespace--string",level:3},{value:"<code>public namespacePrefix</code> \u2192 <code>String</code>",id:"public-namespaceprefix--string",level:3},{value:"<code>public defaultTimeZoneSidKey</code> \u2192 <code>String</code>",id:"public-defaulttimezonesidkey--string",level:3},{value:"<code>public timeZoneOffsetCompanyInMinutes</code> \u2192 <code>Integer</code>",id:"public-timezoneoffsetcompanyinminutes--integer",level:3},{value:"<code>public timeZoneOffsetUserInMinutes</code> \u2192 <code>Integer</code>",id:"public-timezoneoffsetuserinminutes--integer",level:3},{value:"<code>public isDebugMode</code> \u2192 <code>Boolean</code>",id:"public-isdebugmode--boolean",level:3},{value:"<code>public currentOrg</code> \u2192 <code>Organization</code>",id:"public-currentorg--organization",level:3},{value:"<code>public isSandbox</code> \u2192 <code>Boolean</code>",id:"public-issandbox--boolean",level:3},{value:"Methods",id:"methods",level:2},{value:"<code>public static DateTime now()</code>",id:"public-static-datetime-now",level:3},{value:"Returns",id:"returns",level:4},{value:"<code>public static Date today()</code>",id:"public-static-date-today",level:3},{value:"<code>public static Date todayGmt()</code>",id:"public-static-date-todaygmt",level:3},{value:"<code>public static String ifDebugMode(String message)</code>",id:"public-static-string-ifdebugmodestring-message",level:3}];function a(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:["[ This file is autogenerated from apexdoc ]","\n",(0,c.jsx)(i.header,{children:(0,c.jsx)(i.h1,{id:"aqenv",children:"AqEnv"})}),"\n",(0,c.jsxs)(i.p,{children:["Returns information about current Salesforce environment and controls settings such as for debugging and logging.\nWorks in conjunction with the ",(0,c.jsx)(i.a,{href:"https://bitbucket.org/aquiva/aqlib/src/main/AqLib/core/main/objects/Env__c/",children:"Env__c"})," custom setting."]}),"\n",(0,c.jsxs)(i.p,{children:[(0,c.jsx)(i.strong,{children:"Group"})," apex/core"]}),"\n",(0,c.jsx)(i.h2,{id:"fields",children:"Fields"}),"\n",(0,c.jsxs)(i.h3,{id:"public-namespaceoverride--string",children:[(0,c.jsx)(i.code,{children:"public namespaceOverride"})," \u2192 ",(0,c.jsx)(i.code,{children:"String"})]}),"\n",(0,c.jsxs)(i.h3,{id:"public-nowoverride--datetime",children:[(0,c.jsx)(i.code,{children:"public nowOverride"})," \u2192 ",(0,c.jsx)(i.code,{children:"DateTime"})]}),"\n",(0,c.jsxs)(i.p,{children:["Stores overridden DateTime value for ",(0,c.jsx)(i.a,{href:"#public-static-datetime-now",children:"AqEnv.now()"})]}),"\n",(0,c.jsxs)(i.h3,{id:"public-todayoverride--date",children:[(0,c.jsx)(i.code,{children:"public todayOverride"})," \u2192 ",(0,c.jsx)(i.code,{children:"Date"})]}),"\n",(0,c.jsxs)(i.p,{children:["Stores overridden Date value for ",(0,c.jsx)(i.a,{href:"#public-static-date-today",children:"AqEnv.today()"})]}),"\n",(0,c.jsx)(i.hr,{}),"\n",(0,c.jsx)(i.h2,{id:"properties",children:"Properties"}),"\n",(0,c.jsxs)(i.h3,{id:"public-isusingstatecountrypicklists--boolean",children:[(0,c.jsx)(i.code,{children:"public isUsingStateCountryPicklists"})," \u2192 ",(0,c.jsx)(i.code,{children:"Boolean"})]}),"\n",(0,c.jsx)(i.p,{children:"Indicates with State/Country picklists are enabled in the org"}),"\n",(0,c.jsxs)(i.h3,{id:"public-namespace--string",children:[(0,c.jsx)(i.code,{children:"public namespace"})," \u2192 ",(0,c.jsx)(i.code,{children:"String"})]}),"\n",(0,c.jsxs)(i.h3,{id:"public-namespaceprefix--string",children:[(0,c.jsx)(i.code,{children:"public namespacePrefix"})," \u2192 ",(0,c.jsx)(i.code,{children:"String"})]}),"\n",(0,c.jsxs)(i.h3,{id:"public-defaulttimezonesidkey--string",children:[(0,c.jsx)(i.code,{children:"public defaultTimeZoneSidKey"})," \u2192 ",(0,c.jsx)(i.code,{children:"String"})]}),"\n",(0,c.jsx)(i.p,{children:"No way to read this programatically"}),"\n",(0,c.jsxs)(i.h3,{id:"public-timezoneoffsetcompanyinminutes--integer",children:[(0,c.jsx)(i.code,{children:"public timeZoneOffsetCompanyInMinutes"})," \u2192 ",(0,c.jsx)(i.code,{children:"Integer"})]}),"\n",(0,c.jsx)(i.p,{children:"Returns current Org time zone offset from GMT in minutes"}),"\n",(0,c.jsxs)(i.h3,{id:"public-timezoneoffsetuserinminutes--integer",children:[(0,c.jsx)(i.code,{children:"public timeZoneOffsetUserInMinutes"})," \u2192 ",(0,c.jsx)(i.code,{children:"Integer"})]}),"\n",(0,c.jsx)(i.p,{children:"Returns current user time zone offset from GMT in minutes"}),"\n",(0,c.jsxs)(i.h3,{id:"public-isdebugmode--boolean",children:[(0,c.jsx)(i.code,{children:"public isDebugMode"})," \u2192 ",(0,c.jsx)(i.code,{children:"Boolean"})]}),"\n",(0,c.jsxs)(i.p,{children:["Returns system's debug mode state. See ",(0,c.jsx)(i.a,{href:"https://bitbucket.org/aquiva/aqlib/src/main/AqLib/core/main/objects/Env__c/",children:"Env__c"})," custom setting."]}),"\n",(0,c.jsxs)(i.h3,{id:"public-currentorg--organization",children:[(0,c.jsx)(i.code,{children:"public currentOrg"})," \u2192 ",(0,c.jsx)(i.code,{children:"Organization"})]}),"\n",(0,c.jsx)(i.p,{children:"The Organization record, lazy load and only once"}),"\n",(0,c.jsxs)(i.h3,{id:"public-issandbox--boolean",children:[(0,c.jsx)(i.code,{children:"public isSandbox"})," \u2192 ",(0,c.jsx)(i.code,{children:"Boolean"})]}),"\n",(0,c.jsx)(i.p,{children:"Returns true if current org is a sandbox, false otherwise."}),"\n",(0,c.jsx)(i.hr,{}),"\n",(0,c.jsx)(i.h2,{id:"methods",children:"Methods"}),"\n",(0,c.jsx)(i.h3,{id:"public-static-datetime-now",children:(0,c.jsx)(i.code,{children:"public static DateTime now()"})}),"\n",(0,c.jsxs)(i.p,{children:["Must be used in all apex code instead of ",(0,c.jsx)(i.code,{children:"DateTime.now()"})," or ",(0,c.jsx)(i.code,{children:"System.now()"}),". See also ",(0,c.jsx)(i.a,{href:"#public-nowoverride--datetime",children:"AqEnv.nowOverride"})]}),"\n",(0,c.jsx)(i.h4,{id:"returns",children:"Returns"}),"\n",(0,c.jsxs)(i.table,{children:[(0,c.jsx)(i.thead,{children:(0,c.jsxs)(i.tr,{children:[(0,c.jsx)(i.th,{children:"Type"}),(0,c.jsx)(i.th,{children:"Description"})]})}),(0,c.jsx)(i.tbody,{children:(0,c.jsxs)(i.tr,{children:[(0,c.jsx)(i.td,{children:(0,c.jsx)(i.code,{children:"DateTime"})}),(0,c.jsx)(i.td,{children:"DateTime"})]})})]}),"\n",(0,c.jsx)(i.h3,{id:"public-static-date-today",children:(0,c.jsx)(i.code,{children:"public static Date today()"})}),"\n",(0,c.jsxs)(i.p,{children:["Must be used in all apex code instead of ",(0,c.jsx)(i.code,{children:"Date.today()"})," or ",(0,c.jsx)(i.code,{children:"System.today()"}),". See also ",(0,c.jsx)(i.a,{href:"#public-todayoverride--date",children:"AqEnv.TodayOverride"})]}),"\n",(0,c.jsx)(i.h3,{id:"public-static-date-todaygmt",children:(0,c.jsx)(i.code,{children:"public static Date todayGmt()"})}),"\n",(0,c.jsx)(i.h3,{id:"public-static-string-ifdebugmodestring-message",children:(0,c.jsx)(i.code,{children:"public static String ifDebugMode(String message)"})}),"\n",(0,c.jsx)(i.p,{children:"Returns the string if system is in debug mode, empty string otherwise. Allows messages to be more useful in debug mode"}),"\n",(0,c.jsx)(i.hr,{})]})}function u(e={}){const{wrapper:i}={...(0,d.R)(),...e.components};return i?(0,c.jsx)(i,{...e,children:(0,c.jsx)(a,{...e})}):a(e)}},28453:(e,i,n)=>{n.d(i,{R:()=>o,x:()=>s});var t=n(96540);const c={},d=t.createContext(c);function o(e){const i=t.useContext(d);return t.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function s(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:o(e.components),t.createElement(d.Provider,{value:i},e.children)}}}]);